/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunk_N_E"] = self["webpackChunk_N_E"] || []).push([["app/layout"],{

/***/ "(app-pages-browser)/./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?modules=%7B%22request%22%3A%22%2FUsers%2Ftakumatamaki%2Fcode%2FCatask%2Fapp%2Fproviders%2FAuthProvider.tsx%22%2C%22ids%22%3A%5B%22AuthProvider%22%5D%7D&modules=%7B%22request%22%3A%22%2FUsers%2Ftakumatamaki%2Fcode%2FCatask%2Fapp%2Fproviders%2FCatStatusProvider.tsx%22%2C%22ids%22%3A%5B%22CatStatusProvider%22%5D%7D&modules=%7B%22request%22%3A%22%2FUsers%2Ftakumatamaki%2Fcode%2FCatask%2Fapp%2Fproviders%2FItemProvider.tsx%22%2C%22ids%22%3A%5B%22ItemProvider%22%5D%7D&modules=%7B%22request%22%3A%22%2FUsers%2Ftakumatamaki%2Fcode%2FCatask%2Fnode_modules%2Fnext%2Ffont%2Fgoogle%2Ftarget.css%3F%7B%5C%22path%5C%22%3A%5C%22app%2Flayout.tsx%5C%22%2C%5C%22import%5C%22%3A%5C%22Inter%5C%22%2C%5C%22arguments%5C%22%3A%5B%7B%5C%22subsets%5C%22%3A%5B%5C%22latin%5C%22%5D%7D%5D%2C%5C%22variableName%5C%22%3A%5C%22inter%5C%22%7D%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22%2FUsers%2Ftakumatamaki%2Fcode%2FCatask%2Fapp%2Fglobals.css%22%2C%22ids%22%3A%5B%5D%7D&server=false!":
/*!******************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?modules=%7B%22request%22%3A%22%2FUsers%2Ftakumatamaki%2Fcode%2FCatask%2Fapp%2Fproviders%2FAuthProvider.tsx%22%2C%22ids%22%3A%5B%22AuthProvider%22%5D%7D&modules=%7B%22request%22%3A%22%2FUsers%2Ftakumatamaki%2Fcode%2FCatask%2Fapp%2Fproviders%2FCatStatusProvider.tsx%22%2C%22ids%22%3A%5B%22CatStatusProvider%22%5D%7D&modules=%7B%22request%22%3A%22%2FUsers%2Ftakumatamaki%2Fcode%2FCatask%2Fapp%2Fproviders%2FItemProvider.tsx%22%2C%22ids%22%3A%5B%22ItemProvider%22%5D%7D&modules=%7B%22request%22%3A%22%2FUsers%2Ftakumatamaki%2Fcode%2FCatask%2Fnode_modules%2Fnext%2Ffont%2Fgoogle%2Ftarget.css%3F%7B%5C%22path%5C%22%3A%5C%22app%2Flayout.tsx%5C%22%2C%5C%22import%5C%22%3A%5C%22Inter%5C%22%2C%5C%22arguments%5C%22%3A%5B%7B%5C%22subsets%5C%22%3A%5B%5C%22latin%5C%22%5D%7D%5D%2C%5C%22variableName%5C%22%3A%5C%22inter%5C%22%7D%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22%2FUsers%2Ftakumatamaki%2Fcode%2FCatask%2Fapp%2Fglobals.css%22%2C%22ids%22%3A%5B%5D%7D&server=false! ***!

/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

eval(__webpack_require__.ts("Promise.resolve(/*! import() eager */).then(__webpack_require__.bind(__webpack_require__, /*! ./app/providers/AuthProvider.tsx */ \"(app-pages-browser)/./app/providers/AuthProvider.tsx\"));\n;\nPromise.resolve(/*! import() eager */).then(__webpack_require__.bind(__webpack_require__, /*! ./app/providers/CatStatusProvider.tsx */ \"(app-pages-browser)/./app/providers/CatStatusProvider.tsx\"));\n;\nPromise.resolve(/*! import() eager */).then(__webpack_require__.bind(__webpack_require__, /*! ./app/providers/ItemProvider.tsx */ \"(app-pages-browser)/./app/providers/ItemProvider.tsx\"));\n;\nPromise.resolve(/*! import() eager */).then(__webpack_require__.t.bind(__webpack_require__, /*! ./node_modules/next/font/google/target.css?{\"path\":\"app/layout.tsx\",\"import\":\"Inter\",\"arguments\":[{\"subsets\":[\"latin\"]}],\"variableName\":\"inter\"} */ \"(app-pages-browser)/./node_modules/next/font/google/target.css?{\\\"path\\\":\\\"app/layout.tsx\\\",\\\"import\\\":\\\"Inter\\\",\\\"arguments\\\":[{\\\"subsets\\\":[\\\"latin\\\"]}],\\\"variableName\\\":\\\"inter\\\"}\", 23));\n;\nPromise.resolve(/*! import() eager */).then(__webpack_require__.bind(__webpack_require__, /*! ./app/globals.css */ \"(app-pages-browser)/./app/globals.css\"));\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvYnVpbGQvd2VicGFjay9sb2FkZXJzL25leHQtZmxpZ2h0LWNsaWVudC1lbnRyeS1sb2FkZXIuanM/bW9kdWxlcz0lN0IlMjJyZXF1ZXN0JTIyJTNBJTIyJTJGVXNlcnMlMkZ0YWt1bWF0YW1ha2klMkZjb2RlJTJGQ2F0YXNrJTJGYXBwJTJGcHJvdmlkZXJzJTJGQXV0aFByb3ZpZGVyLnRzeCUyMiUyQyUyMmlkcyUyMiUzQSU1QiUyMkF1dGhQcm92aWRlciUyMiU1RCU3RCZtb2R1bGVzPSU3QiUyMnJlcXVlc3QlMjIlM0ElMjIlMkZVc2VycyUyRnRha3VtYXRhbWFraSUyRmNvZGUlMkZDYXRhc2slMkZhcHAlMkZwcm92aWRlcnMlMkZDYXRTdGF0dXNQcm92aWRlci50c3glMjIlMkMlMjJpZHMlMjIlM0ElNUIlMjJDYXRTdGF0dXNQcm92aWRlciUyMiU1RCU3RCZtb2R1bGVzPSU3QiUyMnJlcXVlc3QlMjIlM0ElMjIlMkZVc2VycyUyRnRha3VtYXRhbWFraSUyRmNvZGUlMkZDYXRhc2slMkZhcHAlMkZwcm92aWRlcnMlMkZJdGVtUHJvdmlkZXIudHN4JTIyJTJDJTIyaWRzJTIyJTNBJTVCJTIySXRlbVByb3ZpZGVyJTIyJTVEJTdEJm1vZHVsZXM9JTdCJTIycmVxdWVzdCUyMiUzQSUyMiUyRlVzZXJzJTJGdGFrdW1hdGFtYWtpJTJGY29kZSUyRkNhdGFzayUyRm5vZGVfbW9kdWxlcyUyRm5leHQlMkZmb250JTJGZ29vZ2xlJTJGdGFyZ2V0LmNzcyUzRiU3QiU1QyUyMnBhdGglNUMlMjIlM0ElNUMlMjJhcHAlMkZsYXlvdXQudHN4JTVDJTIyJTJDJTVDJTIyaW1wb3J0JTVDJTIyJTNBJTVDJTIySW50ZXIlNUMlMjIlMkMlNUMlMjJhcmd1bWVudHMlNUMlMjIlM0ElNUIlN0IlNUMlMjJzdWJzZXRzJTVDJTIyJTNBJTVCJTVDJTIybGF0aW4lNUMlMjIlNUQlN0QlNUQlMkMlNUMlMjJ2YXJpYWJsZU5hbWUlNUMlMjIlM0ElNUMlMjJpbnRlciU1QyUyMiU3RCUyMiUyQyUyMmlkcyUyMiUzQSU1QiU1RCU3RCZtb2R1bGVzPSU3QiUyMnJlcXVlc3QlMjIlM0ElMjIlMkZVc2VycyUyRnRha3VtYXRhbWFraSUyRmNvZGUlMkZDYXRhc2slMkZhcHAlMkZnbG9iYWxzLmNzcyUyMiUyQyUyMmlkcyUyMiUzQSU1QiU1RCU3RCZzZXJ2ZXI9ZmFsc2UhIiwibWFwcGluZ3MiOiJBQUFBLDBMQUFxSTtBQUNySTtBQUNBLG9NQUErSTtBQUMvSTtBQUNBLDBMQUFxSTtBQUNySTtBQUNBLGtiQUFxTztBQUNyTztBQUNBLDRKQUFvRiIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvP2IwZjAiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0KC8qIHdlYnBhY2tNb2RlOiBcImVhZ2VyXCIsIHdlYnBhY2tFeHBvcnRzOiBbXCJBdXRoUHJvdmlkZXJcIl0gKi8gXCIvVXNlcnMvdGFrdW1hdGFtYWtpL2NvZGUvQ2F0YXNrL2FwcC9wcm92aWRlcnMvQXV0aFByb3ZpZGVyLnRzeFwiKTtcbjtcbmltcG9ydCgvKiB3ZWJwYWNrTW9kZTogXCJlYWdlclwiLCB3ZWJwYWNrRXhwb3J0czogW1wiQ2F0U3RhdHVzUHJvdmlkZXJcIl0gKi8gXCIvVXNlcnMvdGFrdW1hdGFtYWtpL2NvZGUvQ2F0YXNrL2FwcC9wcm92aWRlcnMvQ2F0U3RhdHVzUHJvdmlkZXIudHN4XCIpO1xuO1xuaW1wb3J0KC8qIHdlYnBhY2tNb2RlOiBcImVhZ2VyXCIsIHdlYnBhY2tFeHBvcnRzOiBbXCJJdGVtUHJvdmlkZXJcIl0gKi8gXCIvVXNlcnMvdGFrdW1hdGFtYWtpL2NvZGUvQ2F0YXNrL2FwcC9wcm92aWRlcnMvSXRlbVByb3ZpZGVyLnRzeFwiKTtcbjtcbmltcG9ydCgvKiB3ZWJwYWNrTW9kZTogXCJlYWdlclwiICovIFwiL1VzZXJzL3Rha3VtYXRhbWFraS9jb2RlL0NhdGFzay9ub2RlX21vZHVsZXMvbmV4dC9mb250L2dvb2dsZS90YXJnZXQuY3NzP3tcXFwicGF0aFxcXCI6XFxcImFwcC9sYXlvdXQudHN4XFxcIixcXFwiaW1wb3J0XFxcIjpcXFwiSW50ZXJcXFwiLFxcXCJhcmd1bWVudHNcXFwiOlt7XFxcInN1YnNldHNcXFwiOltcXFwibGF0aW5cXFwiXX1dLFxcXCJ2YXJpYWJsZU5hbWVcXFwiOlxcXCJpbnRlclxcXCJ9XCIpO1xuO1xuaW1wb3J0KC8qIHdlYnBhY2tNb2RlOiBcImVhZ2VyXCIgKi8gXCIvVXNlcnMvdGFrdW1hdGFtYWtpL2NvZGUvQ2F0YXNrL2FwcC9nbG9iYWxzLmNzc1wiKTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?modules=%7B%22request%22%3A%22%2FUsers%2Ftakumatamaki%2Fcode%2FCatask%2Fapp%2Fproviders%2FAuthProvider.tsx%22%2C%22ids%22%3A%5B%22AuthProvider%22%5D%7D&modules=%7B%22request%22%3A%22%2FUsers%2Ftakumatamaki%2Fcode%2FCatask%2Fapp%2Fproviders%2FCatStatusProvider.tsx%22%2C%22ids%22%3A%5B%22CatStatusProvider%22%5D%7D&modules=%7B%22request%22%3A%22%2FUsers%2Ftakumatamaki%2Fcode%2FCatask%2Fapp%2Fproviders%2FItemProvider.tsx%22%2C%22ids%22%3A%5B%22ItemProvider%22%5D%7D&modules=%7B%22request%22%3A%22%2FUsers%2Ftakumatamaki%2Fcode%2FCatask%2Fnode_modules%2Fnext%2Ffont%2Fgoogle%2Ftarget.css%3F%7B%5C%22path%5C%22%3A%5C%22app%2Flayout.tsx%5C%22%2C%5C%22import%5C%22%3A%5C%22Inter%5C%22%2C%5C%22arguments%5C%22%3A%5B%7B%5C%22subsets%5C%22%3A%5B%5C%22latin%5C%22%5D%7D%5D%2C%5C%22variableName%5C%22%3A%5C%22inter%5C%22%7D%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22%2FUsers%2Ftakumatamaki%2Fcode%2FCatask%2Fapp%2Fglobals.css%22%2C%22ids%22%3A%5B%5D%7D&server=false!\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/next/dist/compiled/mini-css-extract-plugin/hmr/hotModuleReplacement.js":
/*!*********************************************************************************************!*\
  !*** ./node_modules/next/dist/compiled/mini-css-extract-plugin/hmr/hotModuleReplacement.js ***!
  \*********************************************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

eval(__webpack_require__.ts("var __dirname = \"/\";\n(()=>{\"use strict\";var e={592:(e,r,t)=>{var n=t(722);var i=Object.create(null);var a=typeof document===\"undefined\";var o=Array.prototype.forEach;function debounce(e,r){var t=0;return function(){var n=this;var i=arguments;var a=function functionCall(){return e.apply(n,i)};clearTimeout(t);t=setTimeout(a,r)}}function noop(){}function getCurrentScriptUrl(e){var r=i[e];if(!r){if(document.currentScript){r=document.currentScript.src}else{var t=document.getElementsByTagName(\"script\");var a=t[t.length-1];if(a){r=a.src}}i[e]=r}return function(e){if(!r){return null}var t=r.split(/([^\\\\/]+)\\.js$/);var i=t&&t[1];if(!i){return[r.replace(\".js\",\".css\")]}if(!e){return[r.replace(\".js\",\".css\")]}return e.split(\",\").map((function(e){var t=new RegExp(\"\".concat(i,\"\\\\.js$\"),\"g\");return n(r.replace(t,\"\".concat(e.replace(/{fileName}/g,i),\".css\")))}))}}function updateCss(e,r){if(!r){if(!e.href){return}r=e.href.split(\"?\")[0]}if(!isUrlRequest(r)){return}if(e.isLoaded===false){return}if(!r||!(r.indexOf(\".css\")>-1)){return}e.visited=true;var t=e.cloneNode();t.isLoaded=false;t.addEventListener(\"load\",(function(){if(t.isLoaded){return}t.isLoaded=true;e.parentNode.removeChild(e)}));t.addEventListener(\"error\",(function(){if(t.isLoaded){return}t.isLoaded=true;e.parentNode.removeChild(e)}));t.href=\"\".concat(r,\"?\").concat(Date.now());if(e.nextSibling){e.parentNode.insertBefore(t,e.nextSibling)}else{e.parentNode.appendChild(t)}}function getReloadUrl(e,r){var t;e=n(e,{stripWWW:false});r.some((function(n){if(e.indexOf(r)>-1){t=n}}));return t}function reloadStyle(e){if(!e){return false}var r=document.querySelectorAll(\"link\");var t=false;o.call(r,(function(r){if(!r.href){return}var n=getReloadUrl(r.href,e);if(!isUrlRequest(n)){return}if(r.visited===true){return}if(n){updateCss(r,n);t=true}}));return t}function reloadAll(){var e=document.querySelectorAll(\"link\");o.call(e,(function(e){if(e.visited===true){return}updateCss(e)}))}function isUrlRequest(e){if(!/^[a-zA-Z][a-zA-Z\\d+\\-.]*:/.test(e)){return false}return true}e.exports=function(e,r){if(a){console.log(\"no window.document found, will not HMR CSS\");return noop}var t=getCurrentScriptUrl(e);function update(){var e=t(r.filename);var n=reloadStyle(e);if(r.locals){console.log(\"[HMR] Detected local css modules. Reload all css\");reloadAll();return}if(n){console.log(\"[HMR] css reload %s\",e.join(\" \"))}else{console.log(\"[HMR] Reload all css\");reloadAll()}}return debounce(update,50)}},722:e=>{function normalizeUrl(e){return e.reduce((function(e,r){switch(r){case\"..\":e.pop();break;case\".\":break;default:e.push(r)}return e}),[]).join(\"/\")}e.exports=function(e){e=e.trim();if(/^data:/i.test(e)){return e}var r=e.indexOf(\"//\")!==-1?e.split(\"//\")[0]+\"//\":\"\";var t=e.replace(new RegExp(r,\"i\"),\"\").split(\"/\");var n=t[0].toLowerCase().replace(/\\.$/,\"\");t[0]=\"\";var i=normalizeUrl(t);return r+n+i}}};var r={};function __nccwpck_require__(t){var n=r[t];if(n!==undefined){return n.exports}var i=r[t]={exports:{}};var a=true;try{e[t](i,i.exports,__nccwpck_require__);a=false}finally{if(a)delete r[t]}return i.exports}if(typeof __nccwpck_require__!==\"undefined\")__nccwpck_require__.ab=__dirname+\"/\";var t=__nccwpck_require__(592);module.exports=t})();//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvY29tcGlsZWQvbWluaS1jc3MtZXh0cmFjdC1wbHVnaW4vaG1yL2hvdE1vZHVsZVJlcGxhY2VtZW50LmpzIiwibWFwcGluZ3MiOiI7QUFBQSxNQUFNLGFBQWEsT0FBTyxjQUFjLGFBQWEsMEJBQTBCLG9DQUFvQyw4QkFBOEIsdUJBQXVCLFFBQVEsa0JBQWtCLFdBQVcsZ0JBQWdCLDhCQUE4QixxQkFBcUIsZ0JBQWdCLG1CQUFtQixpQkFBaUIsZ0NBQWdDLFdBQVcsT0FBTywyQkFBMkIsNkJBQTZCLEtBQUssOENBQThDLG9CQUFvQixNQUFNLFNBQVMsT0FBTyxtQkFBbUIsT0FBTyxZQUFZLGdDQUFnQyxjQUFjLE9BQU8sZ0NBQWdDLE9BQU8sZ0NBQWdDLHFDQUFxQyw0Q0FBNEMsMkNBQTJDLFNBQVMsZ0JBQWdCLElBQUksd0JBQXdCLE9BQU8sWUFBWSxPQUFPLHVCQUF1QixxQkFBcUIsT0FBTyx1QkFBdUIsT0FBTyxnQ0FBZ0MsT0FBTyxlQUFlLG9CQUFvQixpQkFBaUIsc0NBQXNDLGVBQWUsT0FBTyxnQkFBZ0IsNEJBQTRCLEdBQUcsdUNBQXVDLGVBQWUsT0FBTyxnQkFBZ0IsNEJBQTRCLEdBQUcsMkNBQTJDLGtCQUFrQiwyQ0FBMkMsS0FBSyw2QkFBNkIsMkJBQTJCLE1BQU0sT0FBTyxlQUFlLEVBQUUsb0JBQW9CLG9CQUFvQixLQUFLLEdBQUcsU0FBUyx3QkFBd0IsT0FBTyxhQUFhLHdDQUF3QyxZQUFZLHNCQUFzQixZQUFZLE9BQU8sNkJBQTZCLHFCQUFxQixPQUFPLHFCQUFxQixPQUFPLE1BQU0sZUFBZSxRQUFRLEdBQUcsU0FBUyxxQkFBcUIsd0NBQXdDLHNCQUFzQixxQkFBcUIsT0FBTyxhQUFhLEdBQUcseUJBQXlCLHlDQUF5QyxhQUFhLFlBQVksd0JBQXdCLE1BQU0sMERBQTBELFlBQVksNkJBQTZCLGtCQUFrQixvQkFBb0IscUJBQXFCLGFBQWEsZ0VBQWdFLFlBQVksT0FBTyxNQUFNLCtDQUErQyxLQUFLLG9DQUFvQyxhQUFhLDRCQUE0QixTQUFTLHlCQUF5QiwrQkFBK0IsVUFBVSxpQkFBaUIsTUFBTSxjQUFjLGtCQUFrQixTQUFTLGdCQUFnQixzQkFBc0IsV0FBVyxzQkFBc0IsU0FBUyxvREFBb0QsaURBQWlELDJDQUEyQyxRQUFRLHNCQUFzQixnQkFBZ0IsU0FBUyxnQ0FBZ0MsV0FBVyxrQkFBa0IsaUJBQWlCLFlBQVksWUFBWSxXQUFXLElBQUksc0NBQXNDLFFBQVEsUUFBUSxpQkFBaUIsaUJBQWlCLG1FQUFtRSxTQUFTLEtBQUssK0JBQStCLGlCQUFpQiIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2NvbXBpbGVkL21pbmktY3NzLWV4dHJhY3QtcGx1Z2luL2htci9ob3RNb2R1bGVSZXBsYWNlbWVudC5qcz9iMDc0Il0sInNvdXJjZXNDb250ZW50IjpbIigoKT0+e1widXNlIHN0cmljdFwiO3ZhciBlPXs1OTI6KGUscix0KT0+e3ZhciBuPXQoNzIyKTt2YXIgaT1PYmplY3QuY3JlYXRlKG51bGwpO3ZhciBhPXR5cGVvZiBkb2N1bWVudD09PVwidW5kZWZpbmVkXCI7dmFyIG89QXJyYXkucHJvdG90eXBlLmZvckVhY2g7ZnVuY3Rpb24gZGVib3VuY2UoZSxyKXt2YXIgdD0wO3JldHVybiBmdW5jdGlvbigpe3ZhciBuPXRoaXM7dmFyIGk9YXJndW1lbnRzO3ZhciBhPWZ1bmN0aW9uIGZ1bmN0aW9uQ2FsbCgpe3JldHVybiBlLmFwcGx5KG4saSl9O2NsZWFyVGltZW91dCh0KTt0PXNldFRpbWVvdXQoYSxyKX19ZnVuY3Rpb24gbm9vcCgpe31mdW5jdGlvbiBnZXRDdXJyZW50U2NyaXB0VXJsKGUpe3ZhciByPWlbZV07aWYoIXIpe2lmKGRvY3VtZW50LmN1cnJlbnRTY3JpcHQpe3I9ZG9jdW1lbnQuY3VycmVudFNjcmlwdC5zcmN9ZWxzZXt2YXIgdD1kb2N1bWVudC5nZXRFbGVtZW50c0J5VGFnTmFtZShcInNjcmlwdFwiKTt2YXIgYT10W3QubGVuZ3RoLTFdO2lmKGEpe3I9YS5zcmN9fWlbZV09cn1yZXR1cm4gZnVuY3Rpb24oZSl7aWYoIXIpe3JldHVybiBudWxsfXZhciB0PXIuc3BsaXQoLyhbXlxcXFwvXSspXFwuanMkLyk7dmFyIGk9dCYmdFsxXTtpZighaSl7cmV0dXJuW3IucmVwbGFjZShcIi5qc1wiLFwiLmNzc1wiKV19aWYoIWUpe3JldHVybltyLnJlcGxhY2UoXCIuanNcIixcIi5jc3NcIildfXJldHVybiBlLnNwbGl0KFwiLFwiKS5tYXAoKGZ1bmN0aW9uKGUpe3ZhciB0PW5ldyBSZWdFeHAoXCJcIi5jb25jYXQoaSxcIlxcXFwuanMkXCIpLFwiZ1wiKTtyZXR1cm4gbihyLnJlcGxhY2UodCxcIlwiLmNvbmNhdChlLnJlcGxhY2UoL3tmaWxlTmFtZX0vZyxpKSxcIi5jc3NcIikpKX0pKX19ZnVuY3Rpb24gdXBkYXRlQ3NzKGUscil7aWYoIXIpe2lmKCFlLmhyZWYpe3JldHVybn1yPWUuaHJlZi5zcGxpdChcIj9cIilbMF19aWYoIWlzVXJsUmVxdWVzdChyKSl7cmV0dXJufWlmKGUuaXNMb2FkZWQ9PT1mYWxzZSl7cmV0dXJufWlmKCFyfHwhKHIuaW5kZXhPZihcIi5jc3NcIik+LTEpKXtyZXR1cm59ZS52aXNpdGVkPXRydWU7dmFyIHQ9ZS5jbG9uZU5vZGUoKTt0LmlzTG9hZGVkPWZhbHNlO3QuYWRkRXZlbnRMaXN0ZW5lcihcImxvYWRcIiwoZnVuY3Rpb24oKXtpZih0LmlzTG9hZGVkKXtyZXR1cm59dC5pc0xvYWRlZD10cnVlO2UucGFyZW50Tm9kZS5yZW1vdmVDaGlsZChlKX0pKTt0LmFkZEV2ZW50TGlzdGVuZXIoXCJlcnJvclwiLChmdW5jdGlvbigpe2lmKHQuaXNMb2FkZWQpe3JldHVybn10LmlzTG9hZGVkPXRydWU7ZS5wYXJlbnROb2RlLnJlbW92ZUNoaWxkKGUpfSkpO3QuaHJlZj1cIlwiLmNvbmNhdChyLFwiP1wiKS5jb25jYXQoRGF0ZS5ub3coKSk7aWYoZS5uZXh0U2libGluZyl7ZS5wYXJlbnROb2RlLmluc2VydEJlZm9yZSh0LGUubmV4dFNpYmxpbmcpfWVsc2V7ZS5wYXJlbnROb2RlLmFwcGVuZENoaWxkKHQpfX1mdW5jdGlvbiBnZXRSZWxvYWRVcmwoZSxyKXt2YXIgdDtlPW4oZSx7c3RyaXBXV1c6ZmFsc2V9KTtyLnNvbWUoKGZ1bmN0aW9uKG4pe2lmKGUuaW5kZXhPZihyKT4tMSl7dD1ufX0pKTtyZXR1cm4gdH1mdW5jdGlvbiByZWxvYWRTdHlsZShlKXtpZighZSl7cmV0dXJuIGZhbHNlfXZhciByPWRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoXCJsaW5rXCIpO3ZhciB0PWZhbHNlO28uY2FsbChyLChmdW5jdGlvbihyKXtpZighci5ocmVmKXtyZXR1cm59dmFyIG49Z2V0UmVsb2FkVXJsKHIuaHJlZixlKTtpZighaXNVcmxSZXF1ZXN0KG4pKXtyZXR1cm59aWYoci52aXNpdGVkPT09dHJ1ZSl7cmV0dXJufWlmKG4pe3VwZGF0ZUNzcyhyLG4pO3Q9dHJ1ZX19KSk7cmV0dXJuIHR9ZnVuY3Rpb24gcmVsb2FkQWxsKCl7dmFyIGU9ZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbChcImxpbmtcIik7by5jYWxsKGUsKGZ1bmN0aW9uKGUpe2lmKGUudmlzaXRlZD09PXRydWUpe3JldHVybn11cGRhdGVDc3MoZSl9KSl9ZnVuY3Rpb24gaXNVcmxSZXF1ZXN0KGUpe2lmKCEvXlthLXpBLVpdW2EtekEtWlxcZCtcXC0uXSo6Ly50ZXN0KGUpKXtyZXR1cm4gZmFsc2V9cmV0dXJuIHRydWV9ZS5leHBvcnRzPWZ1bmN0aW9uKGUscil7aWYoYSl7Y29uc29sZS5sb2coXCJubyB3aW5kb3cuZG9jdW1lbnQgZm91bmQsIHdpbGwgbm90IEhNUiBDU1NcIik7cmV0dXJuIG5vb3B9dmFyIHQ9Z2V0Q3VycmVudFNjcmlwdFVybChlKTtmdW5jdGlvbiB1cGRhdGUoKXt2YXIgZT10KHIuZmlsZW5hbWUpO3ZhciBuPXJlbG9hZFN0eWxlKGUpO2lmKHIubG9jYWxzKXtjb25zb2xlLmxvZyhcIltITVJdIERldGVjdGVkIGxvY2FsIGNzcyBtb2R1bGVzLiBSZWxvYWQgYWxsIGNzc1wiKTtyZWxvYWRBbGwoKTtyZXR1cm59aWYobil7Y29uc29sZS5sb2coXCJbSE1SXSBjc3MgcmVsb2FkICVzXCIsZS5qb2luKFwiIFwiKSl9ZWxzZXtjb25zb2xlLmxvZyhcIltITVJdIFJlbG9hZCBhbGwgY3NzXCIpO3JlbG9hZEFsbCgpfX1yZXR1cm4gZGVib3VuY2UodXBkYXRlLDUwKX19LDcyMjplPT57ZnVuY3Rpb24gbm9ybWFsaXplVXJsKGUpe3JldHVybiBlLnJlZHVjZSgoZnVuY3Rpb24oZSxyKXtzd2l0Y2gocil7Y2FzZVwiLi5cIjplLnBvcCgpO2JyZWFrO2Nhc2VcIi5cIjpicmVhaztkZWZhdWx0OmUucHVzaChyKX1yZXR1cm4gZX0pLFtdKS5qb2luKFwiL1wiKX1lLmV4cG9ydHM9ZnVuY3Rpb24oZSl7ZT1lLnRyaW0oKTtpZigvXmRhdGE6L2kudGVzdChlKSl7cmV0dXJuIGV9dmFyIHI9ZS5pbmRleE9mKFwiLy9cIikhPT0tMT9lLnNwbGl0KFwiLy9cIilbMF0rXCIvL1wiOlwiXCI7dmFyIHQ9ZS5yZXBsYWNlKG5ldyBSZWdFeHAocixcImlcIiksXCJcIikuc3BsaXQoXCIvXCIpO3ZhciBuPXRbMF0udG9Mb3dlckNhc2UoKS5yZXBsYWNlKC9cXC4kLyxcIlwiKTt0WzBdPVwiXCI7dmFyIGk9bm9ybWFsaXplVXJsKHQpO3JldHVybiByK24raX19fTt2YXIgcj17fTtmdW5jdGlvbiBfX25jY3dwY2tfcmVxdWlyZV9fKHQpe3ZhciBuPXJbdF07aWYobiE9PXVuZGVmaW5lZCl7cmV0dXJuIG4uZXhwb3J0c312YXIgaT1yW3RdPXtleHBvcnRzOnt9fTt2YXIgYT10cnVlO3RyeXtlW3RdKGksaS5leHBvcnRzLF9fbmNjd3Bja19yZXF1aXJlX18pO2E9ZmFsc2V9ZmluYWxseXtpZihhKWRlbGV0ZSByW3RdfXJldHVybiBpLmV4cG9ydHN9aWYodHlwZW9mIF9fbmNjd3Bja19yZXF1aXJlX18hPT1cInVuZGVmaW5lZFwiKV9fbmNjd3Bja19yZXF1aXJlX18uYWI9X19kaXJuYW1lK1wiL1wiO3ZhciB0PV9fbmNjd3Bja19yZXF1aXJlX18oNTkyKTttb2R1bGUuZXhwb3J0cz10fSkoKTsiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/next/dist/compiled/mini-css-extract-plugin/hmr/hotModuleReplacement.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./app/globals.css":
/*!*************************!*\
  !*** ./app/globals.css ***!
  \*************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony default export */ __webpack_exports__[\"default\"] = (\"c9a8d6dba22b\");\nif (true) { module.hot.accept() }\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL2FwcC9nbG9iYWxzLmNzcyIsIm1hcHBpbmdzIjoiO0FBQUEsK0RBQWUsY0FBYztBQUM3QixJQUFJLElBQVUsSUFBSSxpQkFBaUIiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vYXBwL2dsb2JhbHMuY3NzPzM4ZjciXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGRlZmF1bHQgXCJjOWE4ZDZkYmEyMmJcIlxuaWYgKG1vZHVsZS5ob3QpIHsgbW9kdWxlLmhvdC5hY2NlcHQoKSB9XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./app/globals.css\n"));

/***/ }),

/***/ "(app-pages-browser)/./app/providers/AuthProvider.tsx":
/*!****************************************!*\
  !*** ./app/providers/AuthProvider.tsx ***!
  \****************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   AuthProvider: function() { return /* binding */ AuthProvider; },\n/* harmony export */   useAuth: function() { return /* binding */ useAuth; }\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/jsx-dev-runtime.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _utils_apiClient__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../utils/apiClient */ \"(app-pages-browser)/./app/utils/apiClient.ts\");\n/* __next_internal_client_entry_do_not_use__ AuthProvider,useAuth auto */ \nvar _s = $RefreshSig$(), _s1 = $RefreshSig$();\n\n\nconst AuthContext = /*#__PURE__*/ (0,react__WEBPACK_IMPORTED_MODULE_1__.createContext)(undefined);\nfunction AuthProvider(param) {\n    let { children } = param;\n    _s();\n    const [user, setUser] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(null);\n    const [isLoading, setIsLoading] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(true);\n    const [error, setError] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(null);\n    // アプリ起動時にユーザー情報を取得\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(()=>{\n        const loadUser = async ()=>{\n            setIsLoading(true);\n            try {\n                const { user, success } = await (0,_utils_apiClient__WEBPACK_IMPORTED_MODULE_2__.getCurrentUser)();\n                if (success && user) {\n                    setUser(user);\n                }\n            } catch (err) {\n                console.error(\"ユーザー情報の取得に失敗しました:\", err);\n            } finally{\n                setIsLoading(false);\n            }\n        };\n        loadUser();\n    }, []);\n    // ログイン処理\n    const login = async (email, password)=>{\n        setError(null);\n        setIsLoading(true);\n        try {\n            const response = await (0,_utils_apiClient__WEBPACK_IMPORTED_MODULE_2__.loginUser)(email, password);\n            if (response.success && response.user) {\n                setUser(response.user);\n                return true;\n            } else {\n                setError(response.message || \"ログインに失敗しました\");\n                return false;\n            }\n        } catch (err) {\n            console.error(\"ログイン中にエラーが発生しました:\", err);\n            setError(\"ログイン処理中にエラーが発生しました\");\n            return false;\n        } finally{\n            setIsLoading(false);\n        }\n    };\n    // 登録処理\n    const register = async (email, password)=>{\n        setError(null);\n        setIsLoading(true);\n        try {\n            const response = await (0,_utils_apiClient__WEBPACK_IMPORTED_MODULE_2__.registerUser)(email, password);\n            if (response.success && response.user) {\n                setUser(response.user);\n                return true;\n            } else {\n                setError(response.message || \"登録に失敗しました\");\n                return false;\n            }\n        } catch (err) {\n            console.error(\"登録中にエラーが発生しました:\", err);\n            setError(\"登録処理中にエラーが発生しました\");\n            return false;\n        } finally{\n            setIsLoading(false);\n        }\n    };\n    // ログアウト処理\n    const logout = async ()=>{\n        setIsLoading(true);\n        try {\n            await (0,_utils_apiClient__WEBPACK_IMPORTED_MODULE_2__.logoutUser)();\n            setUser(null);\n        } catch (err) {\n            console.error(\"ログアウト中にエラーが発生しました:\", err);\n        } finally{\n            setIsLoading(false);\n        }\n    };\n    // ポイント更新処理\n    const updatePoints = (points)=>{\n        if (user) {\n            setUser({\n                ...user,\n                points\n            });\n        }\n    };\n    // アカウント削除処理\n    const deleteAccount = async ()=>{\n        setIsLoading(true);\n        try {\n            const result = await (0,_utils_apiClient__WEBPACK_IMPORTED_MODULE_2__.deleteUserAccount)();\n            if (result.success) {\n                setUser(null);\n            }\n            return result;\n        } catch (err) {\n            console.error(\"アカウント削除中にエラーが発生しました:\", err);\n            return {\n                success: false,\n                message: \"アカウント削除処理中にエラーが発生しました\"\n            };\n        } finally{\n            setIsLoading(false);\n        }\n    };\n    const value = {\n        user,\n        isLoading,\n        error,\n        login,\n        register,\n        logout,\n        updatePoints,\n        deleteAccount\n    };\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(AuthContext.Provider, {\n        value: value,\n        children: children\n    }, void 0, false, {\n        fileName: \"/Users/takumatamaki/code/Catask/app/providers/AuthProvider.tsx\",\n        lineNumber: 178,\n        columnNumber: 10\n    }, this);\n}\n_s(AuthProvider, \"caAZa649wyY9nHJT6au393y4yCs=\");\n_c = AuthProvider;\nfunction useAuth() {\n    _s1();\n    const context = (0,react__WEBPACK_IMPORTED_MODULE_1__.useContext)(AuthContext);\n    if (context === undefined) {\n        throw new Error(\"useAuth must be used within an AuthProvider\");\n    }\n    return context;\n}\n_s1(useAuth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./app/providers/AuthProvider.tsx\n"));

/***/ }),

/***/ "(app-pages-browser)/./app/providers/CatStatusProvider.tsx":
/*!*********************************************!*\
  !*** ./app/providers/CatStatusProvider.tsx ***!
  \*********************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   CatStatusProvider: function() { return /* binding */ CatStatusProvider; },\n/* harmony export */   useCatStatus: function() { return /* binding */ useCatStatus; }\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/jsx-dev-runtime.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _utils_types__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../utils/types */ \"(app-pages-browser)/./app/utils/types.ts\");\n/* __next_internal_client_entry_do_not_use__ useCatStatus,CatStatusProvider auto */ \nvar _s = $RefreshSig$(), _s1 = $RefreshSig$();\n\n\n// デフォルトの猫の名前\nconst DEFAULT_CAT_NAME = \"ミケ\";\n// 猫の様子メッセージ（ものに反応していないもの）\nconst CAT_BEHAVIOR_MESSAGES = [\n    \"はのんびりと日向ぼっこをしている\",\n    \"はクッションの上でまるくなっている\",\n    \"は尻尾をゆらゆら振っている\",\n    \"は耳をぴくぴく動かしている\",\n    \"はひげを前に出して何かを探っている\",\n    \"は前足で顔を洗っている\",\n    \"は気持ちよさそうに伸びをしている\",\n    \"はゴロゴロと喉を鳴らしている\",\n    \"は両耳を後ろに倒している\",\n    \"は狩りの姿勢で低く身を潜めている\",\n    \"は静かに爪とぎをしている\",\n    \"は退屈そうにあくびをしている\",\n    \"は気持ちよさそうにうとうとしている\",\n    \"は急に走り出した\",\n    \"はお気に入りの場所でくつろいでいる\",\n    \"は布団の中で丸まっている\",\n    \"は毛づくろいに夢中だ\",\n    \"は高い場所から世界を見下ろしている\",\n    \"はソファの下に隠れている\",\n    \"は背伸びをしながらあくびをしている\",\n    \"は急に何かを思い出したように走り出した\",\n    \"は寝返りをうった\",\n    \"は縄張りを確認するように部屋を歩き回っている\",\n    \"は後ろ足で耳の後ろを掻いている\",\n    \"は飼い主の足元でくるくる回っている\",\n    \"はふわふわの毛布の上でリラックスしている\",\n    \"は冷たい床の上で涼んでいる\",\n    \"は思い切り伸びをしている\",\n    \"は寝ながら夢を見て足をピクピク動かしている\",\n    \"は甘えたそうに鳴いている\",\n    \"は気持ち良さそうに目を細めている\",\n    \"は眠たそうに目をこすっている\",\n    \"は落ち着きなく部屋を歩き回っている\",\n    \"は口の周りをなめて満足そうにしている\",\n    \"は遊びたそうに尻尾を振っている\",\n    \"は何かを考えているようにじっとしている\",\n    \"は早朝から元気に駆け回っている\",\n    \"は部屋の隅でひっそりとくつろいでいる\",\n    \"は肉球を見せてポーズをとっている\",\n    \"はハミングバードのように尻尾が高速で動いている\",\n    \"は何かを思い出したように突然立ち上がった\",\n    \"は意味もなく急に走り回っている\",\n    \"は飼い主が帰ってきて嬉しそうにしている\",\n    \"は食後の満足感からうとうとしている\",\n    \"は静かにゴロゴロと喉を鳴らしている\",\n    \"は前足をピンと伸ばして爪とぎをした\",\n    \"は日差しの中で毛づくろいをしている\",\n    \"は前足を揃えて威厳のある姿勢でくつろいでいる\"\n];\n// ローカルストレージのキー\nconst STORAGE_KEYS = {\n    CAT_NAME: \"catName\",\n    STATUS_LOGS: \"catStatusLogs\",\n    CURRENT_MESSAGE: \"catCurrentMessage\",\n    LAST_UPDATE_TIME: \"catLastUpdateTime\",\n    USED_INDEXES: \"catUsedIndexes\"\n};\nconst CatStatusContext = /*#__PURE__*/ (0,react__WEBPACK_IMPORTED_MODULE_1__.createContext)(undefined);\nfunction useCatStatus() {\n    _s();\n    const context = (0,react__WEBPACK_IMPORTED_MODULE_1__.useContext)(CatStatusContext);\n    if (!context) {\n        throw new Error(\"useCatStatus must be used within a CatStatusProvider\");\n    }\n    return context;\n}\n_s(useCatStatus, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nfunction CatStatusProvider(param) {\n    let { children } = param;\n    _s1();\n    const [catName, setCatName] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(DEFAULT_CAT_NAME);\n    const [isNameSet, setIsNameSet] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false);\n    const [statusType, setStatusType] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(_utils_types__WEBPACK_IMPORTED_MODULE_2__.CatStatusType.NORMAL);\n    const [statusMessage, setStatusMessage] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(\"\");\n    const [statusLogs, setStatusLogs] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)([]);\n    const [usedMessageIndexes, setUsedMessageIndexes] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)([]);\n    const [lastUpdateMinute, setLastUpdateMinute] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(-1);\n    const [isInitialized, setIsInitialized] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false);\n    // 現在のメッセージとタイムスタンプをローカルストレージに保存\n    const saveCurrentState = (message, indexes)=>{\n        localStorage.setItem(STORAGE_KEYS.CURRENT_MESSAGE, message);\n        localStorage.setItem(STORAGE_KEYS.LAST_UPDATE_TIME, new Date().toString());\n        localStorage.setItem(STORAGE_KEYS.USED_INDEXES, JSON.stringify(indexes));\n    };\n    // ローカルストレージからデータを読み込む\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(()=>{\n        // すでに初期化済みの場合は何もしない（リロード時に二重初期化を防止）\n        if (isInitialized) return;\n        const savedName = localStorage.getItem(STORAGE_KEYS.CAT_NAME);\n        if (savedName) {\n            setCatName(savedName);\n            setIsNameSet(true);\n        }\n        // 現在のメッセージを復元\n        const savedMessage = localStorage.getItem(STORAGE_KEYS.CURRENT_MESSAGE);\n        const savedUpdateTime = localStorage.getItem(STORAGE_KEYS.LAST_UPDATE_TIME);\n        const savedIndexes = localStorage.getItem(STORAGE_KEYS.USED_INDEXES);\n        // 保存されたメッセージがある場合\n        if (savedMessage && savedUpdateTime) {\n            setStatusMessage(savedMessage);\n            // 最後の更新時間を復元\n            const lastUpdateTime = new Date(savedUpdateTime);\n            setLastUpdateMinute(lastUpdateTime.getMinutes());\n            // 使用済みインデックスを復元\n            if (savedIndexes) {\n                try {\n                    const parsedIndexes = JSON.parse(savedIndexes);\n                    setUsedMessageIndexes(parsedIndexes);\n                } catch (error) {\n                    console.error(\"使用済みインデックスの復元に失敗しました\", error);\n                }\n            }\n        } else {\n            // 保存されたメッセージがない場合、初期メッセージを生成\n            const initialIndex = Math.floor(Math.random() * CAT_BEHAVIOR_MESSAGES.length);\n            const initialMessage = CAT_BEHAVIOR_MESSAGES[initialIndex];\n            setStatusMessage(initialMessage);\n            setUsedMessageIndexes([\n                initialIndex\n            ]);\n            saveCurrentState(initialMessage, [\n                initialIndex\n            ]);\n        }\n        // ログを復元\n        const savedLogs = localStorage.getItem(STORAGE_KEYS.STATUS_LOGS);\n        if (savedLogs) {\n            try {\n                const parsedLogs = JSON.parse(savedLogs);\n                // タイムスタンプをDateオブジェクトに戻す\n                const formattedLogs = parsedLogs.map((log)=>({\n                        ...log,\n                        timestamp: new Date(log.timestamp)\n                    }));\n                setStatusLogs(formattedLogs);\n            } catch (error) {\n                console.error(\"猫ステータスログの復元に失敗しました\", error);\n            }\n        }\n        // 初期化完了\n        setIsInitialized(true);\n    }, [\n        isInitialized\n    ]);\n    // 猫の名前を設定する関数\n    const handleSetCatName = (name)=>{\n        if (name && name.trim() !== \"\") {\n            const trimmedName = name.trim();\n            setCatName(trimmedName);\n            setIsNameSet(true);\n            // ローカルストレージに保存\n            localStorage.setItem(STORAGE_KEYS.CAT_NAME, trimmedName);\n        }\n    };\n    // 重複しない新しいメッセージを生成\n    const generateNewMessage = ()=>{\n        let availableIndexes = Array.from({\n            length: CAT_BEHAVIOR_MESSAGES.length\n        }, (_, i)=>i).filter((index)=>!usedMessageIndexes.includes(index));\n        // すべてのメッセージを使い切った場合、リセット\n        if (availableIndexes.length === 0) {\n            setUsedMessageIndexes([]);\n            availableIndexes = Array.from({\n                length: CAT_BEHAVIOR_MESSAGES.length\n            }, (_, i)=>i);\n        }\n        // ランダムなインデックスを選択\n        const randomIndex = Math.floor(Math.random() * availableIndexes.length);\n        const selectedIndex = availableIndexes[randomIndex];\n        const newMessage = CAT_BEHAVIOR_MESSAGES[selectedIndex];\n        // 使用済みインデックスを更新\n        const updatedIndexes = [\n            ...usedMessageIndexes,\n            selectedIndex\n        ];\n        setUsedMessageIndexes(updatedIndexes);\n        // メッセージを設定\n        setStatusMessage(newMessage);\n        // 現在の状態を保存\n        saveCurrentState(newMessage, updatedIndexes);\n        // ログに追加\n        addToLog(newMessage);\n    };\n    // ログに追加する関数\n    const addToLog = (message)=>{\n        const newLog = {\n            message: \"\".concat(catName).concat(message),\n            timestamp: new Date()\n        };\n        const updatedLogs = [\n            ...statusLogs,\n            newLog\n        ];\n        // 最大30件までログを保持\n        if (updatedLogs.length > 30) {\n            updatedLogs.shift(); // 古いログを削除\n        }\n        setStatusLogs(updatedLogs);\n        // ローカルストレージに保存\n        localStorage.setItem(STORAGE_KEYS.STATUS_LOGS, JSON.stringify(updatedLogs));\n    };\n    // 外部から強制的にメッセージを更新する関数（今後の拡張用に残す）\n    const refreshMessage = ()=>{\n        // 時計の分が変わるタイミングでのみ更新するため、\n        // 直接更新しないようにします\n        // 代わりに現在の分と最後の更新分を比較\n        const now = new Date();\n        const currentMinute = now.getMinutes();\n        if (currentMinute !== lastUpdateMinute) {\n            generateNewMessage();\n            setLastUpdateMinute(currentMinute);\n        }\n    };\n    // 外部からステータスを変更する関数\n    const setCatStatus = (newStatus)=>{\n        setStatusType(newStatus);\n    // ステータスタイプを変更しても、メッセージは時計の分が変わるまで更新しない\n    };\n    // アイテム使用時の特別な反応を表示する関数\n    const showItemReaction = (reaction)=>{\n        // 特別なメッセージを設定\n        setStatusMessage(reaction);\n        // ログに追加\n        addToLog(reaction);\n        // 現在の使用済みインデックスを保持\n        saveCurrentState(reaction, usedMessageIndexes);\n        // 状態をHAPPYに設定\n        setStatusType(_utils_types__WEBPACK_IMPORTED_MODULE_2__.CatStatusType.HAPPY);\n    };\n    // タイマー設定 - 別のuseEffectで分離して依存関係をクリアにする\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(()=>{\n        // 初期化が完了していない場合は何もしない\n        if (!isInitialized) return;\n        // 次の「分」が始まるまでの時間を計算する関数\n        const getTimeUntilNextMinute = ()=>{\n            const now = new Date();\n            const secondsLeft = 60 - now.getSeconds();\n            const millisecondsLeft = secondsLeft * 1000 - now.getMilliseconds();\n            return millisecondsLeft > 0 ? millisecondsLeft : 0;\n        };\n        console.log(\"タイマーを設定します: 次の分まで\", getTimeUntilNextMinute(), \"ミリ秒\");\n        // 最初のタイマーは次の分の開始時に設定\n        const initialTimer = setTimeout(()=>{\n            const now = new Date();\n            const currentMinute = now.getMinutes();\n            console.log(\"最初のタイマーが発火しました。現在の分:\", currentMinute, \"最後の更新分:\", lastUpdateMinute);\n            // 現在の分が最後の更新時の分と異なる場合のみ更新\n            if (currentMinute !== lastUpdateMinute) {\n                console.log(\"メッセージを更新します\");\n                generateNewMessage();\n                setLastUpdateMinute(currentMinute);\n            }\n            // その後は毎分0秒に更新するインターバルを設定\n            console.log(\"1分間隔のタイマーを設定します\");\n            const minuteInterval = setInterval(()=>{\n                const now = new Date();\n                console.log(\"インターバルが発火しました。現在時刻:\", now.toTimeString());\n                generateNewMessage();\n                setLastUpdateMinute(now.getMinutes());\n            }, 60000); // 1分 = 60000ミリ秒\n            // このコンポーネントがアンマウントされた時にインターバルをクリア\n            return ()=>{\n                console.log(\"インターバルをクリアします\");\n                clearInterval(minuteInterval);\n            };\n        }, getTimeUntilNextMinute());\n        // クリーンアップ関数で最初のタイマーをクリア\n        return ()=>{\n            console.log(\"初期タイマーをクリアします\");\n            clearTimeout(initialTimer);\n        };\n    }, [\n        isInitialized,\n        lastUpdateMinute\n    ]);\n    const value = {\n        catName,\n        setCatName: handleSetCatName,\n        statusType,\n        statusMessage,\n        setCatStatus,\n        refreshMessage,\n        isNameSet,\n        statusLogs,\n        showItemReaction\n    };\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(CatStatusContext.Provider, {\n        value: value,\n        children: children\n    }, void 0, false, {\n        fileName: \"/Users/takumatamaki/code/Catask/app/providers/CatStatusProvider.tsx\",\n        lineNumber: 369,\n        columnNumber: 5\n    }, this);\n}\n_s1(CatStatusProvider, \"Qaou64rsOX4cc2/EPQvVJJo6s3c=\");\n_c = CatStatusProvider;\nvar _c;\n$RefreshReg$(_c, \"CatStatusProvider\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./app/providers/CatStatusProvider.tsx\n"));

/***/ }),

/***/ "(app-pages-browser)/./app/providers/ItemProvider.tsx":
/*!****************************************!*\
  !*** ./app/providers/ItemProvider.tsx ***!
  \****************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ItemProvider: function() { return /* binding */ ItemProvider; },\n/* harmony export */   useItems: function() { return /* binding */ useItems; }\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/jsx-dev-runtime.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _utils_items__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../utils/items */ \"(app-pages-browser)/./app/utils/items.ts\");\n/* harmony import */ var _AuthProvider__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./AuthProvider */ \"(app-pages-browser)/./app/providers/AuthProvider.tsx\");\n/* harmony import */ var _CatStatusProvider__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./CatStatusProvider */ \"(app-pages-browser)/./app/providers/CatStatusProvider.tsx\");\n/* harmony import */ var _utils_types__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../utils/types */ \"(app-pages-browser)/./app/utils/types.ts\");\n/* __next_internal_client_entry_do_not_use__ useItems,ItemProvider auto */ \nvar _s = $RefreshSig$(), _s1 = $RefreshSig$();\n\n\n\n\n\nconst ItemContext = /*#__PURE__*/ (0,react__WEBPACK_IMPORTED_MODULE_1__.createContext)(undefined);\nfunction useItems() {\n    _s();\n    const context = (0,react__WEBPACK_IMPORTED_MODULE_1__.useContext)(ItemContext);\n    if (!context) {\n        throw new Error(\"useItems must be used within an ItemProvider\");\n    }\n    return context;\n}\n_s(useItems, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nfunction ItemProvider(param) {\n    let { children } = param;\n    _s1();\n    const [ownedItems, setOwnedItems] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)([]);\n    const { user, updatePoints } = (0,_AuthProvider__WEBPACK_IMPORTED_MODULE_3__.useAuth)();\n    const { catName, setCatStatus, showItemReaction } = (0,_CatStatusProvider__WEBPACK_IMPORTED_MODULE_4__.useCatStatus)();\n    // ローカルストレージから所有アイテムを読み込む\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(()=>{\n        const savedItems = localStorage.getItem(\"ownedItems\");\n        if (savedItems) {\n            try {\n                const parsedItems = JSON.parse(savedItems);\n                setOwnedItems(parsedItems);\n            } catch (error) {\n                console.error(\"所有アイテムの読み込みに失敗しました\", error);\n            }\n        }\n    }, []);\n    // 所有アイテムをローカルストレージに保存\n    const saveOwnedItems = (items)=>{\n        localStorage.setItem(\"ownedItems\", JSON.stringify(items));\n    };\n    // アイテムを購入する関数\n    const purchaseItem = (itemId)=>{\n        const item = (0,_utils_items__WEBPACK_IMPORTED_MODULE_2__.getItemById)(itemId);\n        if (!item) {\n            console.error(\"アイテムが見つかりません:\", itemId);\n            return false;\n        }\n        // ポイントがあるか確認\n        if (!user || user.points < item.price) {\n            console.error(\"ポイントが足りません\");\n            return false;\n        }\n        // ポイントを消費\n        updatePoints(-item.price);\n        // 所有アイテムを更新\n        const existingItemIndex = ownedItems.findIndex((oi)=>oi.id === itemId);\n        let newOwnedItems;\n        if (existingItemIndex >= 0) {\n            // すでに持っている場合は数量を増やす\n            newOwnedItems = [\n                ...ownedItems\n            ];\n            newOwnedItems[existingItemIndex] = {\n                ...newOwnedItems[existingItemIndex],\n                quantity: newOwnedItems[existingItemIndex].quantity + 1\n            };\n        } else {\n            // 新しいアイテムの場合は追加\n            newOwnedItems = [\n                ...ownedItems,\n                {\n                    id: itemId,\n                    quantity: 1\n                }\n            ];\n        }\n        setOwnedItems(newOwnedItems);\n        saveOwnedItems(newOwnedItems);\n        return true;\n    };\n    // アイテムを使用する関数\n    const useItem = (itemId)=>{\n        const ownedItem = ownedItems.find((item)=>item.id === itemId);\n        if (!ownedItem || ownedItem.quantity <= 0) {\n            console.error(\"アイテムを所持していません:\", itemId);\n            return false;\n        }\n        const item = (0,_utils_items__WEBPACK_IMPORTED_MODULE_2__.getItemById)(itemId);\n        if (!item) {\n            console.error(\"アイテムが見つかりません:\", itemId);\n            return false;\n        }\n        // アイテムの効果を適用\n        setCatStatus(_utils_types__WEBPACK_IMPORTED_MODULE_5__.CatStatusType.HAPPY); // アイテム使用時は「HAPPY」状態にする\n        // 特別な反応を表示\n        showItemReaction(item.reaction);\n        // アイテム使用回数を減らす\n        const newOwnedItems = ownedItems.map((oi)=>{\n            if (oi.id === itemId) {\n                return {\n                    ...oi,\n                    quantity: oi.quantity - 1\n                };\n            }\n            return oi;\n        }).filter((oi)=>oi.quantity > 0); // 数量が0になったアイテムは削除\n        setOwnedItems(newOwnedItems);\n        saveOwnedItems(newOwnedItems);\n        return true;\n    };\n    // 所有アイテムを取得する関数\n    const getOwnedItem = (itemId)=>{\n        return ownedItems.find((item)=>item.id === itemId);\n    };\n    const value = {\n        ownedItems,\n        purchaseItem,\n        useItem,\n        getOwnedItem\n    };\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(ItemContext.Provider, {\n        value: value,\n        children: children\n    }, void 0, false, {\n        fileName: \"/Users/takumatamaki/code/Catask/app/providers/ItemProvider.tsx\",\n        lineNumber: 151,\n        columnNumber: 10\n    }, this);\n}\n_s1(ItemProvider, \"Rd+OMjJkwbkS5APnOh0FMSXZCas=\", false, function() {\n    return [\n        _AuthProvider__WEBPACK_IMPORTED_MODULE_3__.useAuth,\n        _CatStatusProvider__WEBPACK_IMPORTED_MODULE_4__.useCatStatus\n    ];\n});\n_c = ItemProvider;\nvar _c;\n$RefreshReg$(_c, \"ItemProvider\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./app/providers/ItemProvider.tsx\n"));

/***/ }),

/***/ "(app-pages-browser)/./app/utils/apiClient.ts":
/*!********************************!*\
  !*** ./app/utils/apiClient.ts ***!
  \********************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   deleteUserAccount: function() { return /* binding */ deleteUserAccount; },\n/* harmony export */   getCurrentUser: function() { return /* binding */ getCurrentUser; },\n/* harmony export */   loginUser: function() { return /* binding */ loginUser; },\n/* harmony export */   logoutUser: function() { return /* binding */ logoutUser; },\n/* harmony export */   registerUser: function() { return /* binding */ registerUser; },\n/* harmony export */   updateUserPoints: function() { return /* binding */ updateUserPoints; },\n/* harmony export */   updateUserTasks: function() { return /* binding */ updateUserTasks; }\n/* harmony export */ });\n// ユーザー登録\nasync function registerUser(email, password) {\n    try {\n        const response = await fetch(\"/api/auth/register\", {\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": \"application/json\"\n            },\n            body: JSON.stringify({\n                email,\n                password\n            })\n        });\n        return await response.json();\n    } catch (error) {\n        console.error(\"登録処理中にエラーが発生しました\", error);\n        return {\n            success: false,\n            message: \"通信エラーが発生しました。インターネット接続を確認してください。\"\n        };\n    }\n}\n// ユーザーログイン\nasync function loginUser(email, password) {\n    try {\n        const response = await fetch(\"/api/auth/login\", {\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": \"application/json\"\n            },\n            body: JSON.stringify({\n                email,\n                password\n            })\n        });\n        const data = await response.json();\n        console.log(\"ログインレスポンス:\", JSON.stringify(data));\n        return data;\n    } catch (error) {\n        console.error(\"ログイン処理中にエラーが発生しました\", error);\n        return {\n            success: false,\n            message: \"通信エラーが発生しました。インターネット接続を確認してください。\"\n        };\n    }\n}\n// ユーザーログアウト\nasync function logoutUser() {\n    try {\n        const response = await fetch(\"/api/auth/logout\", {\n            method: \"POST\"\n        });\n        return await response.json();\n    } catch (error) {\n        console.error(\"ログアウト処理中にエラーが発生しました\", error);\n        return {\n            success: false\n        };\n    }\n}\n// 現在のユーザー情報を取得\nasync function getCurrentUser() {\n    try {\n        const response = await fetch(\"/api/auth/me\");\n        const data = await response.json();\n        console.log(\"ユーザー情報取得レスポンス:\", JSON.stringify(data));\n        if (data.success && data.user) {\n            return {\n                user: data.user,\n                success: true\n            };\n        }\n        return {\n            user: null,\n            success: false\n        };\n    } catch (error) {\n        console.error(\"ユーザー情報の取得中にエラーが発生しました\", error);\n        return {\n            user: null,\n            success: false\n        };\n    }\n}\n// ユーザーのタスクを更新\nasync function updateUserTasks(tasks) {\n    try {\n        const response = await fetch(\"/api/tasks/update\", {\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": \"application/json\"\n            },\n            body: JSON.stringify({\n                tasks\n            })\n        });\n        return await response.json();\n    } catch (error) {\n        console.error(\"タスクの更新中にエラーが発生しました\", error);\n        return {\n            success: false\n        };\n    }\n}\n// ユーザーのポイントを更新\nasync function updateUserPoints(points) {\n    try {\n        const response = await fetch(\"/api/user/update-points\", {\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": \"application/json\"\n            },\n            body: JSON.stringify({\n                points\n            })\n        });\n        return await response.json();\n    } catch (error) {\n        console.error(\"ポイントの更新中にエラーが発生しました\", error);\n        return {\n            success: false\n        };\n    }\n}\n// ユーザーアカウントを削除\nasync function deleteUserAccount() {\n    try {\n        const response = await fetch(\"/api/user/delete\", {\n            method: \"DELETE\"\n        });\n        return await response.json();\n    } catch (error) {\n        console.error(\"アカウント削除中にエラーが発生しました\", error);\n        return {\n            success: false,\n            message: \"通信エラーが発生しました。インターネット接続を確認してください。\"\n        };\n    }\n}\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./app/utils/apiClient.ts\n"));

/***/ }),

/***/ "(app-pages-browser)/./app/utils/items.ts":
/*!****************************!*\
  !*** ./app/utils/items.ts ***!
  \****************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ITEMS: function() { return /* binding */ ITEMS; },\n/* harmony export */   getItemById: function() { return /* binding */ getItemById; },\n/* harmony export */   getItemsByCategory: function() { return /* binding */ getItemsByCategory; }\n/* harmony export */ });\n/* harmony import */ var _types__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./types */ \"(app-pages-browser)/./app/utils/types.ts\");\n\nconst ITEMS = [\n    // 食料アイテム\n    {\n        id: \"water\",\n        name: \"水\",\n        description: \"新鮮な水です。猫は水分補給が大切です。\",\n        price: 2,\n        category: _types__WEBPACK_IMPORTED_MODULE_0__.ItemCategory.FOOD,\n        effect: \"水分補給ができました\",\n        reaction: \"は水をちょびちょび飲んでいる\"\n    },\n    {\n        id: \"milk\",\n        name: \"ミルク\",\n        description: \"猫用のミルクです。おやつにぴったり。\",\n        price: 4,\n        category: _types__WEBPACK_IMPORTED_MODULE_0__.ItemCategory.FOOD,\n        effect: \"おやつを楽しみました\",\n        reaction: \"はミルクを美味しそうに舐めている\"\n    },\n    {\n        id: \"tuna\",\n        name: \"ツナ缶\",\n        description: \"猫が大好きなツナの缶詰です。\",\n        price: 6,\n        category: _types__WEBPACK_IMPORTED_MODULE_0__.ItemCategory.FOOD,\n        effect: \"特別な食事を楽しみました\",\n        reaction: \"はツナ缶に夢中で、幸せそうな顔をしている\"\n    },\n    {\n        id: \"churru\",\n        name: \"チュール\",\n        description: \"猫が喜ぶおやつの定番、チュールです。\",\n        price: 8,\n        category: _types__WEBPACK_IMPORTED_MODULE_0__.ItemCategory.FOOD,\n        effect: \"最高のおやつを堪能しました\",\n        reaction: \"はチュールに大興奮！手からなめ取っている\"\n    },\n    // おもちゃ\n    {\n        id: \"feather\",\n        name: \"ねこじゃらし\",\n        description: \"猫が夢中になるねこじゃらしです。\",\n        price: 5,\n        category: _types__WEBPACK_IMPORTED_MODULE_0__.ItemCategory.TOY,\n        effect: \"遊びを楽しみました\",\n        reaction: \"はねこじゃらしに飛びついて遊んでいる\"\n    },\n    {\n        id: \"laser\",\n        name: \"レーザーポインター\",\n        description: \"赤い光を追いかけて猫が大興奮します。\",\n        price: 10,\n        category: _types__WEBPACK_IMPORTED_MODULE_0__.ItemCategory.TOY,\n        effect: \"活発に遊びました\",\n        reaction: \"はレーザーポインターの光を必死に追いかけている\"\n    },\n    {\n        id: \"mouse\",\n        name: \"ねずみのおもちゃ\",\n        description: \"リアルな動きをするねずみのおもちゃです。\",\n        price: 15,\n        category: _types__WEBPACK_IMPORTED_MODULE_0__.ItemCategory.TOY,\n        effect: \"狩りの本能が刺激されました\",\n        reaction: \"はねずみのおもちゃを狩る姿勢で狙っている\"\n    },\n    {\n        id: \"plush\",\n        name: \"お気に入りのぬいぐるみ\",\n        description: \"猫専用の特別なぬいぐるみです。\",\n        price: 20,\n        category: _types__WEBPACK_IMPORTED_MODULE_0__.ItemCategory.TOY,\n        effect: \"特別なおもちゃに大満足\",\n        reaction: \"はお気に入りのぬいぐるみを抱きしめて喉を鳴らしている\"\n    },\n    // 家具\n    {\n        id: \"scratcher\",\n        name: \"爪研ぎ\",\n        description: \"猫が爪を研げる専用の柱です。\",\n        price: 3,\n        category: _types__WEBPACK_IMPORTED_MODULE_0__.ItemCategory.FURNITURE,\n        effect: \"爪を気持ちよく研げました\",\n        reaction: \"は爪研ぎで気持ちよさそうに爪を研いでいる\"\n    },\n    {\n        id: \"tower\",\n        name: \"キャットタワー\",\n        description: \"猫が登ったり休んだりできる大型タワーです。\",\n        price: 6,\n        category: _types__WEBPACK_IMPORTED_MODULE_0__.ItemCategory.FURNITURE,\n        effect: \"高い場所から部屋を見渡せました\",\n        reaction: \"はキャットタワーの一番高い場所で寛いでいる\"\n    },\n    {\n        id: \"lap\",\n        name: \"膝上\",\n        description: \"あなたの膝の上で猫をなでてあげましょう。\",\n        price: 9,\n        category: _types__WEBPACK_IMPORTED_MODULE_0__.ItemCategory.FURNITURE,\n        effect: \"飼い主との触れ合いを楽しみました\",\n        reaction: \"は膝の上で気持ちよさそうに丸まっている\"\n    }\n];\nfunction getItemById(id) {\n    return ITEMS.find((item)=>item.id === id);\n}\nfunction getItemsByCategory(category) {\n    return ITEMS.filter((item)=>item.category === category);\n}\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL2FwcC91dGlscy9pdGVtcy50cyIsIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQTZDO0FBRXRDLE1BQU1DLFFBQWdCO0lBQzNCLFNBQVM7SUFDVDtRQUNFQyxJQUFJO1FBQ0pDLE1BQU07UUFDTkMsYUFBYTtRQUNiQyxPQUFPO1FBQ1BDLFVBQVVOLGdEQUFZQSxDQUFDTyxJQUFJO1FBQzNCQyxRQUFRO1FBQ1JDLFVBQVU7SUFDWjtJQUNBO1FBQ0VQLElBQUk7UUFDSkMsTUFBTTtRQUNOQyxhQUFhO1FBQ2JDLE9BQU87UUFDUEMsVUFBVU4sZ0RBQVlBLENBQUNPLElBQUk7UUFDM0JDLFFBQVE7UUFDUkMsVUFBVTtJQUNaO0lBQ0E7UUFDRVAsSUFBSTtRQUNKQyxNQUFNO1FBQ05DLGFBQWE7UUFDYkMsT0FBTztRQUNQQyxVQUFVTixnREFBWUEsQ0FBQ08sSUFBSTtRQUMzQkMsUUFBUTtRQUNSQyxVQUFVO0lBQ1o7SUFDQTtRQUNFUCxJQUFJO1FBQ0pDLE1BQU07UUFDTkMsYUFBYTtRQUNiQyxPQUFPO1FBQ1BDLFVBQVVOLGdEQUFZQSxDQUFDTyxJQUFJO1FBQzNCQyxRQUFRO1FBQ1JDLFVBQVU7SUFDWjtJQUVBLE9BQU87SUFDUDtRQUNFUCxJQUFJO1FBQ0pDLE1BQU07UUFDTkMsYUFBYTtRQUNiQyxPQUFPO1FBQ1BDLFVBQVVOLGdEQUFZQSxDQUFDVSxHQUFHO1FBQzFCRixRQUFRO1FBQ1JDLFVBQVU7SUFDWjtJQUNBO1FBQ0VQLElBQUk7UUFDSkMsTUFBTTtRQUNOQyxhQUFhO1FBQ2JDLE9BQU87UUFDUEMsVUFBVU4sZ0RBQVlBLENBQUNVLEdBQUc7UUFDMUJGLFFBQVE7UUFDUkMsVUFBVTtJQUNaO0lBQ0E7UUFDRVAsSUFBSTtRQUNKQyxNQUFNO1FBQ05DLGFBQWE7UUFDYkMsT0FBTztRQUNQQyxVQUFVTixnREFBWUEsQ0FBQ1UsR0FBRztRQUMxQkYsUUFBUTtRQUNSQyxVQUFVO0lBQ1o7SUFDQTtRQUNFUCxJQUFJO1FBQ0pDLE1BQU07UUFDTkMsYUFBYTtRQUNiQyxPQUFPO1FBQ1BDLFVBQVVOLGdEQUFZQSxDQUFDVSxHQUFHO1FBQzFCRixRQUFRO1FBQ1JDLFVBQVU7SUFDWjtJQUVBLEtBQUs7SUFDTDtRQUNFUCxJQUFJO1FBQ0pDLE1BQU07UUFDTkMsYUFBYTtRQUNiQyxPQUFPO1FBQ1BDLFVBQVVOLGdEQUFZQSxDQUFDVyxTQUFTO1FBQ2hDSCxRQUFRO1FBQ1JDLFVBQVU7SUFDWjtJQUNBO1FBQ0VQLElBQUk7UUFDSkMsTUFBTTtRQUNOQyxhQUFhO1FBQ2JDLE9BQU87UUFDUEMsVUFBVU4sZ0RBQVlBLENBQUNXLFNBQVM7UUFDaENILFFBQVE7UUFDUkMsVUFBVTtJQUNaO0lBQ0E7UUFDRVAsSUFBSTtRQUNKQyxNQUFNO1FBQ05DLGFBQWE7UUFDYkMsT0FBTztRQUNQQyxVQUFVTixnREFBWUEsQ0FBQ1csU0FBUztRQUNoQ0gsUUFBUTtRQUNSQyxVQUFVO0lBQ1o7Q0FDRCxDQUFDO0FBRUssU0FBU0csWUFBWVYsRUFBVTtJQUNwQyxPQUFPRCxNQUFNWSxJQUFJLENBQUMsQ0FBQ0MsT0FBU0EsS0FBS1osRUFBRSxLQUFLQTtBQUMxQztBQUVPLFNBQVNhLG1CQUFtQlQsUUFBc0I7SUFDdkQsT0FBT0wsTUFBTWUsTUFBTSxDQUFDLENBQUNGLE9BQVNBLEtBQUtSLFFBQVEsS0FBS0E7QUFDbEQiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vYXBwL3V0aWxzL2l0ZW1zLnRzPzlkNGMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgSXRlbSwgSXRlbUNhdGVnb3J5IH0gZnJvbSBcIi4vdHlwZXNcIjtcblxuZXhwb3J0IGNvbnN0IElURU1TOiBJdGVtW10gPSBbXG4gIC8vIOmjn+aWmeOCouOCpOODhuODoFxuICB7XG4gICAgaWQ6IFwid2F0ZXJcIixcbiAgICBuYW1lOiBcIuawtFwiLFxuICAgIGRlc2NyaXB0aW9uOiBcIuaWsOmuruOBquawtOOBp+OBmeOAgueMq+OBr+awtOWIhuijnOe1puOBjOWkp+WIh+OBp+OBmeOAglwiLFxuICAgIHByaWNlOiAyLFxuICAgIGNhdGVnb3J5OiBJdGVtQ2F0ZWdvcnkuRk9PRCxcbiAgICBlZmZlY3Q6IFwi5rC05YiG6KOc57Wm44GM44Gn44GN44G+44GX44GfXCIsXG4gICAgcmVhY3Rpb246IFwi44Gv5rC044KS44Gh44KH44Gz44Gh44KH44Gz6aOy44KT44Gn44GE44KLXCIsXG4gIH0sXG4gIHtcbiAgICBpZDogXCJtaWxrXCIsXG4gICAgbmFtZTogXCLjg5/jg6vjgq9cIixcbiAgICBkZXNjcmlwdGlvbjogXCLnjKvnlKjjga7jg5/jg6vjgq/jgafjgZnjgILjgYrjgoTjgaTjgavjgbTjgaPjgZ/jgorjgIJcIixcbiAgICBwcmljZTogNCxcbiAgICBjYXRlZ29yeTogSXRlbUNhdGVnb3J5LkZPT0QsXG4gICAgZWZmZWN0OiBcIuOBiuOChOOBpOOCkualveOBl+OBv+OBvuOBl+OBn1wiLFxuICAgIHJlYWN0aW9uOiBcIuOBr+ODn+ODq+OCr+OCkue+juWRs+OBl+OBneOBhuOBq+iIkOOCgeOBpuOBhOOCi1wiLFxuICB9LFxuICB7XG4gICAgaWQ6IFwidHVuYVwiLFxuICAgIG5hbWU6IFwi44OE44OK57y2XCIsXG4gICAgZGVzY3JpcHRpb246IFwi54yr44GM5aSn5aW944GN44Gq44OE44OK44Gu57y26Kmw44Gn44GZ44CCXCIsXG4gICAgcHJpY2U6IDYsXG4gICAgY2F0ZWdvcnk6IEl0ZW1DYXRlZ29yeS5GT09ELFxuICAgIGVmZmVjdDogXCLnibnliKXjgarpo5/kuovjgpLmpb3jgZfjgb/jgb7jgZfjgZ9cIixcbiAgICByZWFjdGlvbjogXCLjga/jg4Tjg4rnvLbjgavlpKLkuK3jgafjgIHlubjjgZvjgZ3jgYbjgarpoZTjgpLjgZfjgabjgYTjgotcIixcbiAgfSxcbiAge1xuICAgIGlkOiBcImNodXJydVwiLFxuICAgIG5hbWU6IFwi44OB44Ol44O844OrXCIsXG4gICAgZGVzY3JpcHRpb246IFwi54yr44GM5Zac44G244GK44KE44Gk44Gu5a6a55Wq44CB44OB44Ol44O844Or44Gn44GZ44CCXCIsXG4gICAgcHJpY2U6IDgsXG4gICAgY2F0ZWdvcnk6IEl0ZW1DYXRlZ29yeS5GT09ELFxuICAgIGVmZmVjdDogXCLmnIDpq5jjga7jgYrjgoTjgaTjgpLloKrog73jgZfjgb7jgZfjgZ9cIixcbiAgICByZWFjdGlvbjogXCLjga/jg4Hjg6Xjg7zjg6vjgavlpKfoiIjlpa7vvIHmiYvjgYvjgonjgarjgoHlj5bjgaPjgabjgYTjgotcIixcbiAgfSxcblxuICAvLyDjgYrjgoLjgaHjgoNcbiAge1xuICAgIGlkOiBcImZlYXRoZXJcIixcbiAgICBuYW1lOiBcIuOBreOBk+OBmOOCg+OCieOBl1wiLFxuICAgIGRlc2NyaXB0aW9uOiBcIueMq+OBjOWkouS4reOBq+OBquOCi+OBreOBk+OBmOOCg+OCieOBl+OBp+OBmeOAglwiLFxuICAgIHByaWNlOiA1LFxuICAgIGNhdGVnb3J5OiBJdGVtQ2F0ZWdvcnkuVE9ZLFxuICAgIGVmZmVjdDogXCLpgYrjgbPjgpLmpb3jgZfjgb/jgb7jgZfjgZ9cIixcbiAgICByZWFjdGlvbjogXCLjga/jga3jgZPjgZjjgoPjgonjgZfjgavpo5vjgbPjgaTjgYTjgabpgYrjgpPjgafjgYTjgotcIixcbiAgfSxcbiAge1xuICAgIGlkOiBcImxhc2VyXCIsXG4gICAgbmFtZTogXCLjg6zjg7zjgrbjg7zjg53jgqTjg7Pjgr/jg7xcIixcbiAgICBkZXNjcmlwdGlvbjogXCLotaTjgYTlhYnjgpLov73jgYTjgYvjgZHjgabnjKvjgYzlpKfoiIjlpa7jgZfjgb7jgZnjgIJcIixcbiAgICBwcmljZTogMTAsXG4gICAgY2F0ZWdvcnk6IEl0ZW1DYXRlZ29yeS5UT1ksXG4gICAgZWZmZWN0OiBcIua0u+eZuuOBq+mBiuOBs+OBvuOBl+OBn1wiLFxuICAgIHJlYWN0aW9uOiBcIuOBr+ODrOODvOOCtuODvOODneOCpOODs+OCv+ODvOOBruWFieOCkuW/heatu+OBq+i/veOBhOOBi+OBkeOBpuOBhOOCi1wiLFxuICB9LFxuICB7XG4gICAgaWQ6IFwibW91c2VcIixcbiAgICBuYW1lOiBcIuOBreOBmuOBv+OBruOBiuOCguOBoeOCg1wiLFxuICAgIGRlc2NyaXB0aW9uOiBcIuODquOCouODq+OBquWLleOBjeOCkuOBmeOCi+OBreOBmuOBv+OBruOBiuOCguOBoeOCg+OBp+OBmeOAglwiLFxuICAgIHByaWNlOiAxNSxcbiAgICBjYXRlZ29yeTogSXRlbUNhdGVnb3J5LlRPWSxcbiAgICBlZmZlY3Q6IFwi54up44KK44Gu5pys6IO944GM5Yi65r+A44GV44KM44G+44GX44GfXCIsXG4gICAgcmVhY3Rpb246IFwi44Gv44Gt44Ga44G/44Gu44GK44KC44Gh44KD44KS54up44KL5ae/5Yui44Gn54uZ44Gj44Gm44GE44KLXCIsXG4gIH0sXG4gIHtcbiAgICBpZDogXCJwbHVzaFwiLFxuICAgIG5hbWU6IFwi44GK5rCX44Gr5YWl44KK44Gu44Gs44GE44GQ44KL44G/XCIsXG4gICAgZGVzY3JpcHRpb246IFwi54yr5bCC55So44Gu54m55Yil44Gq44Gs44GE44GQ44KL44G/44Gn44GZ44CCXCIsXG4gICAgcHJpY2U6IDIwLFxuICAgIGNhdGVnb3J5OiBJdGVtQ2F0ZWdvcnkuVE9ZLFxuICAgIGVmZmVjdDogXCLnibnliKXjgarjgYrjgoLjgaHjgoPjgavlpKfmuoDotrNcIixcbiAgICByZWFjdGlvbjogXCLjga/jgYrmsJfjgavlhaXjgorjga7jgazjgYTjgZDjgovjgb/jgpLmirHjgY3jgZfjgoHjgabllonjgpLps7TjgonjgZfjgabjgYTjgotcIixcbiAgfSxcblxuICAvLyDlrrblhbdcbiAge1xuICAgIGlkOiBcInNjcmF0Y2hlclwiLFxuICAgIG5hbWU6IFwi54iq56CU44GOXCIsXG4gICAgZGVzY3JpcHRpb246IFwi54yr44GM54iq44KS56CU44GS44KL5bCC55So44Gu5p+x44Gn44GZ44CCXCIsXG4gICAgcHJpY2U6IDMsXG4gICAgY2F0ZWdvcnk6IEl0ZW1DYXRlZ29yeS5GVVJOSVRVUkUsXG4gICAgZWZmZWN0OiBcIueIquOCkuawl+aMgeOBoeOCiOOBj+eglOOBkuOBvuOBl+OBn1wiLFxuICAgIHJlYWN0aW9uOiBcIuOBr+eIqueglOOBjuOBp+awl+aMgeOBoeOCiOOBleOBneOBhuOBq+eIquOCkueglOOBhOOBp+OBhOOCi1wiLFxuICB9LFxuICB7XG4gICAgaWQ6IFwidG93ZXJcIixcbiAgICBuYW1lOiBcIuOCreODo+ODg+ODiOOCv+ODr+ODvFwiLFxuICAgIGRlc2NyaXB0aW9uOiBcIueMq+OBjOeZu+OBo+OBn+OCiuS8keOCk+OBoOOCiuOBp+OBjeOCi+Wkp+Wei+OCv+ODr+ODvOOBp+OBmeOAglwiLFxuICAgIHByaWNlOiA2LFxuICAgIGNhdGVnb3J5OiBJdGVtQ2F0ZWdvcnkuRlVSTklUVVJFLFxuICAgIGVmZmVjdDogXCLpq5jjgYTloLTmiYDjgYvjgonpg6jlsYvjgpLopovmuKHjgZvjgb7jgZfjgZ9cIixcbiAgICByZWFjdGlvbjogXCLjga/jgq3jg6Pjg4Pjg4jjgr/jg6/jg7zjga7kuIDnlarpq5jjgYTloLTmiYDjgaflr5vjgYTjgafjgYTjgotcIixcbiAgfSxcbiAge1xuICAgIGlkOiBcImxhcFwiLFxuICAgIG5hbWU6IFwi6Iad5LiKXCIsXG4gICAgZGVzY3JpcHRpb246IFwi44GC44Gq44Gf44Gu6Iad44Gu5LiK44Gn54yr44KS44Gq44Gn44Gm44GC44GS44G+44GX44KH44GG44CCXCIsXG4gICAgcHJpY2U6IDksXG4gICAgY2F0ZWdvcnk6IEl0ZW1DYXRlZ29yeS5GVVJOSVRVUkUsXG4gICAgZWZmZWN0OiBcIumjvOOBhOS4u+OBqOOBruinpuOCjOWQiOOBhOOCkualveOBl+OBv+OBvuOBl+OBn1wiLFxuICAgIHJlYWN0aW9uOiBcIuOBr+iGneOBruS4iuOBp+awl+aMgeOBoeOCiOOBleOBneOBhuOBq+S4uOOBvuOBo+OBpuOBhOOCi1wiLFxuICB9LFxuXTtcblxuZXhwb3J0IGZ1bmN0aW9uIGdldEl0ZW1CeUlkKGlkOiBzdHJpbmcpOiBJdGVtIHwgdW5kZWZpbmVkIHtcbiAgcmV0dXJuIElURU1TLmZpbmQoKGl0ZW0pID0+IGl0ZW0uaWQgPT09IGlkKTtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGdldEl0ZW1zQnlDYXRlZ29yeShjYXRlZ29yeTogSXRlbUNhdGVnb3J5KTogSXRlbVtdIHtcbiAgcmV0dXJuIElURU1TLmZpbHRlcigoaXRlbSkgPT4gaXRlbS5jYXRlZ29yeSA9PT0gY2F0ZWdvcnkpO1xufVxuIl0sIm5hbWVzIjpbIkl0ZW1DYXRlZ29yeSIsIklURU1TIiwiaWQiLCJuYW1lIiwiZGVzY3JpcHRpb24iLCJwcmljZSIsImNhdGVnb3J5IiwiRk9PRCIsImVmZmVjdCIsInJlYWN0aW9uIiwiVE9ZIiwiRlVSTklUVVJFIiwiZ2V0SXRlbUJ5SWQiLCJmaW5kIiwiaXRlbSIsImdldEl0ZW1zQnlDYXRlZ29yeSIsImZpbHRlciJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./app/utils/items.ts\n"));

/***/ }),

/***/ "(app-pages-browser)/./app/utils/types.ts":
/*!****************************!*\
  !*** ./app/utils/types.ts ***!
  \****************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   CatStatusType: function() { return /* binding */ CatStatusType; },\n/* harmony export */   ItemCategory: function() { return /* binding */ ItemCategory; },\n/* harmony export */   TaskFilter: function() { return /* binding */ TaskFilter; }\n/* harmony export */ });\nvar TaskFilter;\n(function(TaskFilter) {\n    TaskFilter[\"ALL\"] = \"all\";\n    TaskFilter[\"ACTIVE\"] = \"active\";\n    TaskFilter[\"COMPLETED\"] = \"completed\";\n})(TaskFilter || (TaskFilter = {}));\nvar CatStatusType;\n(function(CatStatusType) {\n    CatStatusType[\"NORMAL\"] = \"normal\";\n    CatStatusType[\"HAPPY\"] = \"happy\";\n    CatStatusType[\"HUNGRY\"] = \"hungry\";\n    CatStatusType[\"SLEEPY\"] = \"sleepy\";\n    CatStatusType[\"PLAYFUL\"] = \"playful\";\n})(CatStatusType || (CatStatusType = {}));\nvar ItemCategory;\n(function(ItemCategory) {\n    ItemCategory[\"FOOD\"] = \"food\";\n    ItemCategory[\"TOY\"] = \"toy\";\n    ItemCategory[\"FURNITURE\"] = \"furniture\";\n})(ItemCategory || (ItemCategory = {}));\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL2FwcC91dGlscy90eXBlcy50cyIsIm1hcHBpbmdzIjoiOzs7Ozs7O1VBU1lBOzs7O0dBQUFBLGVBQUFBOztVQU9BQzs7Ozs7O0dBQUFBLGtCQUFBQTs7VUFRQUM7Ozs7R0FBQUEsaUJBQUFBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL2FwcC91dGlscy90eXBlcy50cz8zOGMxIl0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBpbnRlcmZhY2UgVGFzayB7XG4gIGlkOiBzdHJpbmc7XG4gIHRpdGxlOiBzdHJpbmc7XG4gIGNvbXBsZXRlZDogYm9vbGVhbjtcbiAgY3JlYXRlZEF0OiBEYXRlO1xuICBlc3RpbWF0ZWRUaW1lOiBudW1iZXI7IC8vIOWIhuWNmOS9jVxuICBkdWVEYXRlOiBEYXRlIHwgbnVsbDsgLy8g57eg44KB5YiH44KK5pel5pmC77yIbnVsbOOBruWgtOWQiOOBr+ioreWumuOBquOBl++8iVxufVxuXG5leHBvcnQgZW51bSBUYXNrRmlsdGVyIHtcbiAgQUxMID0gXCJhbGxcIixcbiAgQUNUSVZFID0gXCJhY3RpdmVcIixcbiAgQ09NUExFVEVEID0gXCJjb21wbGV0ZWRcIixcbn1cblxuLy8g54yr44Gu44K544OG44O844K/44K544K/44Kk44OXXG5leHBvcnQgZW51bSBDYXRTdGF0dXNUeXBlIHtcbiAgTk9STUFMID0gXCJub3JtYWxcIiwgLy8g6YCa5bi454q25oWLXG4gIEhBUFBZID0gXCJoYXBweVwiLCAvLyDlrInjgZfjgYTnirbmhYtcbiAgSFVOR1JZID0gXCJodW5ncnlcIiwgLy8g44GK6IW544GM56m644GE44Gm44GE44KL54q25oWLXG4gIFNMRUVQWSA9IFwic2xlZXB5XCIsIC8vIOecoOOBhOeKtuaFi1xuICBQTEFZRlVMID0gXCJwbGF5ZnVsXCIsIC8vIOmBiuOBs+OBn+OBhOeKtuaFi1xufVxuXG5leHBvcnQgZW51bSBJdGVtQ2F0ZWdvcnkge1xuICBGT09EID0gXCJmb29kXCIsXG4gIFRPWSA9IFwidG95XCIsXG4gIEZVUk5JVFVSRSA9IFwiZnVybml0dXJlXCIsXG59XG5cbmV4cG9ydCBpbnRlcmZhY2UgSXRlbSB7XG4gIGlkOiBzdHJpbmc7XG4gIG5hbWU6IHN0cmluZztcbiAgZGVzY3JpcHRpb246IHN0cmluZztcbiAgcHJpY2U6IG51bWJlcjtcbiAgY2F0ZWdvcnk6IEl0ZW1DYXRlZ29yeTtcbiAgZWZmZWN0OiBzdHJpbmc7XG4gIHJlYWN0aW9uOiBzdHJpbmc7XG59XG5cbmV4cG9ydCBpbnRlcmZhY2UgVXNlciB7XG4gIGlkOiBzdHJpbmc7XG4gIGVtYWlsOiBzdHJpbmc7XG4gIHBhc3N3b3JkOiBzdHJpbmc7IC8vIOOCteODvOODkOODvOOBp+OBr+ODj+ODg+OCt+ODpeWMluOBl+OBpuS/neWtmFxuICBjcmVhdGVkQXQ6IERhdGU7XG4gIHBvaW50czogbnVtYmVyO1xuICB0YXNrczogVGFza1tdO1xufVxuXG5leHBvcnQgaW50ZXJmYWNlIEF1dGhSZXNwb25zZSB7XG4gIHN1Y2Nlc3M6IGJvb2xlYW47XG4gIG1lc3NhZ2U/OiBzdHJpbmc7XG4gIHVzZXI/OiB7XG4gICAgaWQ6IHN0cmluZztcbiAgICBlbWFpbDogc3RyaW5nO1xuICAgIHBvaW50czogbnVtYmVyO1xuICB9O1xuICB0b2tlbj86IHN0cmluZztcbn1cblxuZXhwb3J0IGludGVyZmFjZSBBcGlFcnJvciB7XG4gIHN1Y2Nlc3M6IGZhbHNlO1xuICBtZXNzYWdlOiBzdHJpbmc7XG59XG4iXSwibmFtZXMiOlsiVGFza0ZpbHRlciIsIkNhdFN0YXR1c1R5cGUiLCJJdGVtQ2F0ZWdvcnkiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./app/utils/types.ts\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/next/font/google/target.css?{\"path\":\"app/layout.tsx\",\"import\":\"Inter\",\"arguments\":[{\"subsets\":[\"latin\"]}],\"variableName\":\"inter\"}":
/*!********************************************************************************************************************************************************!*\
  !*** ./node_modules/next/font/google/target.css?{"path":"app/layout.tsx","import":"Inter","arguments":[{"subsets":["latin"]}],"variableName":"inter"} ***!
  \********************************************************************************************************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

eval(__webpack_require__.ts("// extracted by mini-css-extract-plugin\nmodule.exports = {\"style\":{\"fontFamily\":\"'__Inter_d65c78', '__Inter_Fallback_d65c78'\",\"fontStyle\":\"normal\"},\"className\":\"__className_d65c78\"};\n    if(true) {\n      // 1743933666211\n      var cssReload = __webpack_require__(/*! ./node_modules/next/dist/compiled/mini-css-extract-plugin/hmr/hotModuleReplacement.js */ \"(app-pages-browser)/./node_modules/next/dist/compiled/mini-css-extract-plugin/hmr/hotModuleReplacement.js\")(module.id, {\"publicPath\":\"/_next/\",\"esModule\":false,\"locals\":true});\n      module.hot.dispose(cssReload);\n      \n    }\n  //# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9uZXh0L2ZvbnQvZ29vZ2xlL3RhcmdldC5jc3M/e1wicGF0aFwiOlwiYXBwL2xheW91dC50c3hcIixcImltcG9ydFwiOlwiSW50ZXJcIixcImFyZ3VtZW50c1wiOlt7XCJzdWJzZXRzXCI6W1wibGF0aW5cIl19XSxcInZhcmlhYmxlTmFtZVwiOlwiaW50ZXJcIn0iLCJtYXBwaW5ncyI6IkFBQUE7QUFDQSxrQkFBa0IsU0FBUyxnRkFBZ0Y7QUFDM0csT0FBTyxJQUFVO0FBQ2pCO0FBQ0Esc0JBQXNCLG1CQUFPLENBQUMsd01BQXFILGNBQWMsc0RBQXNEO0FBQ3ZOLE1BQU0sVUFBVTtBQUNoQjtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL25leHQvZm9udC9nb29nbGUvdGFyZ2V0LmNzcz8xYzJhIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIGV4dHJhY3RlZCBieSBtaW5pLWNzcy1leHRyYWN0LXBsdWdpblxubW9kdWxlLmV4cG9ydHMgPSB7XCJzdHlsZVwiOntcImZvbnRGYW1pbHlcIjpcIidfX0ludGVyX2Q2NWM3OCcsICdfX0ludGVyX0ZhbGxiYWNrX2Q2NWM3OCdcIixcImZvbnRTdHlsZVwiOlwibm9ybWFsXCJ9LFwiY2xhc3NOYW1lXCI6XCJfX2NsYXNzTmFtZV9kNjVjNzhcIn07XG4gICAgaWYobW9kdWxlLmhvdCkge1xuICAgICAgLy8gMTc0MzkzMzY2NjIxMVxuICAgICAgdmFyIGNzc1JlbG9hZCA9IHJlcXVpcmUoXCIvVXNlcnMvdGFrdW1hdGFtYWtpL2NvZGUvQ2F0YXNrL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvY29tcGlsZWQvbWluaS1jc3MtZXh0cmFjdC1wbHVnaW4vaG1yL2hvdE1vZHVsZVJlcGxhY2VtZW50LmpzXCIpKG1vZHVsZS5pZCwge1wicHVibGljUGF0aFwiOlwiL19uZXh0L1wiLFwiZXNNb2R1bGVcIjpmYWxzZSxcImxvY2Fsc1wiOnRydWV9KTtcbiAgICAgIG1vZHVsZS5ob3QuZGlzcG9zZShjc3NSZWxvYWQpO1xuICAgICAgXG4gICAgfVxuICAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/next/font/google/target.css?{\"path\":\"app/layout.tsx\",\"import\":\"Inter\",\"arguments\":[{\"subsets\":[\"latin\"]}],\"variableName\":\"inter\"}\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/next/dist/compiled/react/cjs/react-jsx-dev-runtime.development.js":
/*!****************************************************************************************!*\
  !*** ./node_modules/next/dist/compiled/react/cjs/react-jsx-dev-runtime.development.js ***!
  \****************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("/**\n * @license React\n * react-jsx-dev-runtime.development.js\n *\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n\n\nif (true) {\n  (function() {\n'use strict';\n\nvar React = __webpack_require__(/*! next/dist/compiled/react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n\n// ATTENTION\n// When adding new symbols to this file,\n// Please consider also adding to 'react-devtools-shared/src/backend/ReactSymbols'\n// The Symbol used to tag the ReactElement-like types.\nvar REACT_ELEMENT_TYPE = Symbol.for('react.element');\nvar REACT_PORTAL_TYPE = Symbol.for('react.portal');\nvar REACT_FRAGMENT_TYPE = Symbol.for('react.fragment');\nvar REACT_STRICT_MODE_TYPE = Symbol.for('react.strict_mode');\nvar REACT_PROFILER_TYPE = Symbol.for('react.profiler');\nvar REACT_PROVIDER_TYPE = Symbol.for('react.provider'); // TODO: Delete with enableRenderableContext\n\nvar REACT_CONSUMER_TYPE = Symbol.for('react.consumer');\nvar REACT_CONTEXT_TYPE = Symbol.for('react.context');\nvar REACT_FORWARD_REF_TYPE = Symbol.for('react.forward_ref');\nvar REACT_SUSPENSE_TYPE = Symbol.for('react.suspense');\nvar REACT_SUSPENSE_LIST_TYPE = Symbol.for('react.suspense_list');\nvar REACT_MEMO_TYPE = Symbol.for('react.memo');\nvar REACT_LAZY_TYPE = Symbol.for('react.lazy');\nvar REACT_OFFSCREEN_TYPE = Symbol.for('react.offscreen');\nvar REACT_CACHE_TYPE = Symbol.for('react.cache');\nvar MAYBE_ITERATOR_SYMBOL = Symbol.iterator;\nvar FAUX_ITERATOR_SYMBOL = '@@iterator';\nfunction getIteratorFn(maybeIterable) {\n  if (maybeIterable === null || typeof maybeIterable !== 'object') {\n    return null;\n  }\n\n  var maybeIterator = MAYBE_ITERATOR_SYMBOL && maybeIterable[MAYBE_ITERATOR_SYMBOL] || maybeIterable[FAUX_ITERATOR_SYMBOL];\n\n  if (typeof maybeIterator === 'function') {\n    return maybeIterator;\n  }\n\n  return null;\n}\n\nvar ReactSharedInternals = React.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;\n\nfunction error(format) {\n  {\n    {\n      for (var _len2 = arguments.length, args = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {\n        args[_key2 - 1] = arguments[_key2];\n      }\n\n      printWarning('error', format, args);\n    }\n  }\n}\n\nfunction printWarning(level, format, args) {\n  // When changing this logic, you might want to also\n  // update consoleWithStackDev.www.js as well.\n  {\n    var ReactDebugCurrentFrame = ReactSharedInternals.ReactDebugCurrentFrame;\n    var stack = ReactDebugCurrentFrame.getStackAddendum();\n\n    if (stack !== '') {\n      format += '%s';\n      args = args.concat([stack]);\n    } // eslint-disable-next-line react-internal/safe-string-coercion\n\n\n    var argsWithFormat = args.map(function (item) {\n      return String(item);\n    }); // Careful: RN currently depends on this prefix\n\n    argsWithFormat.unshift('Warning: ' + format); // We intentionally don't use spread (or .apply) directly because it\n    // breaks IE9: https://github.com/facebook/react/issues/13610\n    // eslint-disable-next-line react-internal/no-production-logging\n\n    Function.prototype.apply.call(console[level], console, argsWithFormat);\n  }\n}\n\n// -----------------------------------------------------------------------------\n\nvar enableScopeAPI = false; // Experimental Create Event Handle API.\nvar enableCacheElement = false;\nvar enableTransitionTracing = false; // No known bugs, but needs performance testing\n\nvar enableLegacyHidden = false; // Enables unstable_avoidThisFallback feature in Fiber\nvar enableRenderableContext = false;\n// stuff. Intended to enable React core members to more easily debug scheduling\n// issues in DEV builds.\n\nvar enableDebugTracing = false;\n\nfunction getWrappedName(outerType, innerType, wrapperName) {\n  var displayName = outerType.displayName;\n\n  if (displayName) {\n    return displayName;\n  }\n\n  var functionName = innerType.displayName || innerType.name || '';\n  return functionName !== '' ? wrapperName + \"(\" + functionName + \")\" : wrapperName;\n} // Keep in sync with react-reconciler/getComponentNameFromFiber\n\n\nfunction getContextName(type) {\n  return type.displayName || 'Context';\n}\n\nvar REACT_CLIENT_REFERENCE$2 = Symbol.for('react.client.reference'); // Note that the reconciler package should generally prefer to use getComponentNameFromFiber() instead.\n\nfunction getComponentNameFromType(type) {\n  if (type == null) {\n    // Host root, text node or just invalid type.\n    return null;\n  }\n\n  if (typeof type === 'function') {\n    if (type.$$typeof === REACT_CLIENT_REFERENCE$2) {\n      // TODO: Create a convention for naming client references with debug info.\n      return null;\n    }\n\n    return type.displayName || type.name || null;\n  }\n\n  if (typeof type === 'string') {\n    return type;\n  }\n\n  switch (type) {\n    case REACT_FRAGMENT_TYPE:\n      return 'Fragment';\n\n    case REACT_PORTAL_TYPE:\n      return 'Portal';\n\n    case REACT_PROFILER_TYPE:\n      return 'Profiler';\n\n    case REACT_STRICT_MODE_TYPE:\n      return 'StrictMode';\n\n    case REACT_SUSPENSE_TYPE:\n      return 'Suspense';\n\n    case REACT_SUSPENSE_LIST_TYPE:\n      return 'SuspenseList';\n\n    case REACT_CACHE_TYPE:\n      {\n        return 'Cache';\n      }\n\n  }\n\n  if (typeof type === 'object') {\n    {\n      if (typeof type.tag === 'number') {\n        error('Received an unexpected object in getComponentNameFromType(). ' + 'This is likely a bug in React. Please file an issue.');\n      }\n    }\n\n    switch (type.$$typeof) {\n      case REACT_PROVIDER_TYPE:\n        {\n          var provider = type;\n          return getContextName(provider._context) + '.Provider';\n        }\n\n      case REACT_CONTEXT_TYPE:\n        var context = type;\n\n        {\n          return getContextName(context) + '.Consumer';\n        }\n\n      case REACT_CONSUMER_TYPE:\n        {\n          return null;\n        }\n\n      case REACT_FORWARD_REF_TYPE:\n        return getWrappedName(type, type.render, 'ForwardRef');\n\n      case REACT_MEMO_TYPE:\n        var outerName = type.displayName || null;\n\n        if (outerName !== null) {\n          return outerName;\n        }\n\n        return getComponentNameFromType(type.type) || 'Memo';\n\n      case REACT_LAZY_TYPE:\n        {\n          var lazyComponent = type;\n          var payload = lazyComponent._payload;\n          var init = lazyComponent._init;\n\n          try {\n            return getComponentNameFromType(init(payload));\n          } catch (x) {\n            return null;\n          }\n        }\n    }\n  }\n\n  return null;\n}\n\n// $FlowFixMe[method-unbinding]\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\n\nvar assign = Object.assign;\n\n/*\n * The `'' + value` pattern (used in perf-sensitive code) throws for Symbol\n * and Temporal.* types. See https://github.com/facebook/react/pull/22064.\n *\n * The functions in this module will throw an easier-to-understand,\n * easier-to-debug exception with a clear errors message message explaining the\n * problem. (Instead of a confusing exception thrown inside the implementation\n * of the `value` object).\n */\n// $FlowFixMe[incompatible-return] only called in DEV, so void return is not possible.\nfunction typeName(value) {\n  {\n    // toStringTag is needed for namespaced types like Temporal.Instant\n    var hasToStringTag = typeof Symbol === 'function' && Symbol.toStringTag;\n    var type = hasToStringTag && value[Symbol.toStringTag] || value.constructor.name || 'Object'; // $FlowFixMe[incompatible-return]\n\n    return type;\n  }\n} // $FlowFixMe[incompatible-return] only called in DEV, so void return is not possible.\n\n\nfunction willCoercionThrow(value) {\n  {\n    try {\n      testStringCoercion(value);\n      return false;\n    } catch (e) {\n      return true;\n    }\n  }\n}\n\nfunction testStringCoercion(value) {\n  // If you ended up here by following an exception call stack, here's what's\n  // happened: you supplied an object or symbol value to React (as a prop, key,\n  // DOM attribute, CSS property, string ref, etc.) and when React tried to\n  // coerce it to a string using `'' + value`, an exception was thrown.\n  //\n  // The most common types that will cause this exception are `Symbol` instances\n  // and Temporal objects like `Temporal.Instant`. But any object that has a\n  // `valueOf` or `[Symbol.toPrimitive]` method that throws will also cause this\n  // exception. (Library authors do this to prevent users from using built-in\n  // numeric operators like `+` or comparison operators like `>=` because custom\n  // methods are needed to perform accurate arithmetic or comparison.)\n  //\n  // To fix the problem, coerce this object or symbol value to a string before\n  // passing it to React. The most reliable way is usually `String(value)`.\n  //\n  // To find which value is throwing, check the browser or debugger console.\n  // Before this exception was thrown, there should be `console.error` output\n  // that shows the type (Symbol, Temporal.PlainDate, etc.) that caused the\n  // problem and how that type was used: key, atrribute, input value prop, etc.\n  // In most cases, this console output also shows the component and its\n  // ancestor components where the exception happened.\n  //\n  // eslint-disable-next-line react-internal/safe-string-coercion\n  return '' + value;\n}\nfunction checkKeyStringCoercion(value) {\n  {\n    if (willCoercionThrow(value)) {\n      error('The provided key is an unsupported type %s.' + ' This value must be coerced to a string before using it here.', typeName(value));\n\n      return testStringCoercion(value); // throw (to help callers find troubleshooting comments)\n    }\n  }\n}\n\nvar REACT_CLIENT_REFERENCE$1 = Symbol.for('react.client.reference');\nfunction isValidElementType(type) {\n  if (typeof type === 'string' || typeof type === 'function') {\n    return true;\n  } // Note: typeof might be other than 'symbol' or 'number' (e.g. if it's a polyfill).\n\n\n  if (type === REACT_FRAGMENT_TYPE || type === REACT_PROFILER_TYPE || enableDebugTracing  || type === REACT_STRICT_MODE_TYPE || type === REACT_SUSPENSE_TYPE || type === REACT_SUSPENSE_LIST_TYPE || enableLegacyHidden  || type === REACT_OFFSCREEN_TYPE || enableScopeAPI  || enableCacheElement  || enableTransitionTracing ) {\n    return true;\n  }\n\n  if (typeof type === 'object' && type !== null) {\n    if (type.$$typeof === REACT_LAZY_TYPE || type.$$typeof === REACT_MEMO_TYPE || type.$$typeof === REACT_CONTEXT_TYPE || type.$$typeof === REACT_PROVIDER_TYPE || enableRenderableContext  || type.$$typeof === REACT_FORWARD_REF_TYPE || // This needs to include all possible module reference object\n    // types supported by any Flight configuration anywhere since\n    // we don't know which Flight build this will end up being used\n    // with.\n    type.$$typeof === REACT_CLIENT_REFERENCE$1 || type.getModuleId !== undefined) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\nvar isArrayImpl = Array.isArray; // eslint-disable-next-line no-redeclare\n\nfunction isArray(a) {\n  return isArrayImpl(a);\n}\n\n// Helpers to patch console.logs to avoid logging during side-effect free\n// replaying on render function. This currently only patches the object\n// lazily which won't cover if the log function was extracted eagerly.\n// We could also eagerly patch the method.\nvar disabledDepth = 0;\nvar prevLog;\nvar prevInfo;\nvar prevWarn;\nvar prevError;\nvar prevGroup;\nvar prevGroupCollapsed;\nvar prevGroupEnd;\n\nfunction disabledLog() {}\n\ndisabledLog.__reactDisabledLog = true;\nfunction disableLogs() {\n  {\n    if (disabledDepth === 0) {\n      /* eslint-disable react-internal/no-production-logging */\n      prevLog = console.log;\n      prevInfo = console.info;\n      prevWarn = console.warn;\n      prevError = console.error;\n      prevGroup = console.group;\n      prevGroupCollapsed = console.groupCollapsed;\n      prevGroupEnd = console.groupEnd; // https://github.com/facebook/react/issues/19099\n\n      var props = {\n        configurable: true,\n        enumerable: true,\n        value: disabledLog,\n        writable: true\n      }; // $FlowFixMe[cannot-write] Flow thinks console is immutable.\n\n      Object.defineProperties(console, {\n        info: props,\n        log: props,\n        warn: props,\n        error: props,\n        group: props,\n        groupCollapsed: props,\n        groupEnd: props\n      });\n      /* eslint-enable react-internal/no-production-logging */\n    }\n\n    disabledDepth++;\n  }\n}\nfunction reenableLogs() {\n  {\n    disabledDepth--;\n\n    if (disabledDepth === 0) {\n      /* eslint-disable react-internal/no-production-logging */\n      var props = {\n        configurable: true,\n        enumerable: true,\n        writable: true\n      }; // $FlowFixMe[cannot-write] Flow thinks console is immutable.\n\n      Object.defineProperties(console, {\n        log: assign({}, props, {\n          value: prevLog\n        }),\n        info: assign({}, props, {\n          value: prevInfo\n        }),\n        warn: assign({}, props, {\n          value: prevWarn\n        }),\n        error: assign({}, props, {\n          value: prevError\n        }),\n        group: assign({}, props, {\n          value: prevGroup\n        }),\n        groupCollapsed: assign({}, props, {\n          value: prevGroupCollapsed\n        }),\n        groupEnd: assign({}, props, {\n          value: prevGroupEnd\n        })\n      });\n      /* eslint-enable react-internal/no-production-logging */\n    }\n\n    if (disabledDepth < 0) {\n      error('disabledDepth fell below zero. ' + 'This is a bug in React. Please file an issue.');\n    }\n  }\n}\n\nvar ReactCurrentDispatcher = ReactSharedInternals.ReactCurrentDispatcher;\nvar prefix;\nfunction describeBuiltInComponentFrame(name, ownerFn) {\n  {\n    if (prefix === undefined) {\n      // Extract the VM specific prefix used by each line.\n      try {\n        throw Error();\n      } catch (x) {\n        var match = x.stack.trim().match(/\\n( *(at )?)/);\n        prefix = match && match[1] || '';\n      }\n    } // We use the prefix to ensure our stacks line up with native stack frames.\n\n\n    return '\\n' + prefix + name;\n  }\n}\nvar reentry = false;\nvar componentFrameCache;\n\n{\n  var PossiblyWeakMap = typeof WeakMap === 'function' ? WeakMap : Map;\n  componentFrameCache = new PossiblyWeakMap();\n}\n/**\n * Leverages native browser/VM stack frames to get proper details (e.g.\n * filename, line + col number) for a single component in a component stack. We\n * do this by:\n *   (1) throwing and catching an error in the function - this will be our\n *       control error.\n *   (2) calling the component which will eventually throw an error that we'll\n *       catch - this will be our sample error.\n *   (3) diffing the control and sample error stacks to find the stack frame\n *       which represents our component.\n */\n\n\nfunction describeNativeComponentFrame(fn, construct) {\n  // If something asked for a stack inside a fake render, it should get ignored.\n  if (!fn || reentry) {\n    return '';\n  }\n\n  {\n    var frame = componentFrameCache.get(fn);\n\n    if (frame !== undefined) {\n      return frame;\n    }\n  }\n\n  reentry = true;\n  var previousPrepareStackTrace = Error.prepareStackTrace; // $FlowFixMe[incompatible-type] It does accept undefined.\n\n  Error.prepareStackTrace = undefined;\n  var previousDispatcher;\n\n  {\n    previousDispatcher = ReactCurrentDispatcher.current; // Set the dispatcher in DEV because this might be call in the render function\n    // for warnings.\n\n    ReactCurrentDispatcher.current = null;\n    disableLogs();\n  }\n  /**\n   * Finding a common stack frame between sample and control errors can be\n   * tricky given the different types and levels of stack trace truncation from\n   * different JS VMs. So instead we'll attempt to control what that common\n   * frame should be through this object method:\n   * Having both the sample and control errors be in the function under the\n   * `DescribeNativeComponentFrameRoot` property, + setting the `name` and\n   * `displayName` properties of the function ensures that a stack\n   * frame exists that has the method name `DescribeNativeComponentFrameRoot` in\n   * it for both control and sample stacks.\n   */\n\n\n  var RunInRootFrame = {\n    DetermineComponentFrameRoot: function () {\n      var control;\n\n      try {\n        // This should throw.\n        if (construct) {\n          // Something should be setting the props in the constructor.\n          var Fake = function () {\n            throw Error();\n          }; // $FlowFixMe[prop-missing]\n\n\n          Object.defineProperty(Fake.prototype, 'props', {\n            set: function () {\n              // We use a throwing setter instead of frozen or non-writable props\n              // because that won't throw in a non-strict mode function.\n              throw Error();\n            }\n          });\n\n          if (typeof Reflect === 'object' && Reflect.construct) {\n            // We construct a different control for this case to include any extra\n            // frames added by the construct call.\n            try {\n              Reflect.construct(Fake, []);\n            } catch (x) {\n              control = x;\n            }\n\n            Reflect.construct(fn, [], Fake);\n          } else {\n            try {\n              Fake.call();\n            } catch (x) {\n              control = x;\n            } // $FlowFixMe[prop-missing] found when upgrading Flow\n\n\n            fn.call(Fake.prototype);\n          }\n        } else {\n          try {\n            throw Error();\n          } catch (x) {\n            control = x;\n          } // TODO(luna): This will currently only throw if the function component\n          // tries to access React/ReactDOM/props. We should probably make this throw\n          // in simple components too\n\n\n          var maybePromise = fn(); // If the function component returns a promise, it's likely an async\n          // component, which we don't yet support. Attach a noop catch handler to\n          // silence the error.\n          // TODO: Implement component stacks for async client components?\n\n          if (maybePromise && typeof maybePromise.catch === 'function') {\n            maybePromise.catch(function () {});\n          }\n        }\n      } catch (sample) {\n        // This is inlined manually because closure doesn't do it for us.\n        if (sample && control && typeof sample.stack === 'string') {\n          return [sample.stack, control.stack];\n        }\n      }\n\n      return [null, null];\n    }\n  }; // $FlowFixMe[prop-missing]\n\n  RunInRootFrame.DetermineComponentFrameRoot.displayName = 'DetermineComponentFrameRoot';\n  var namePropDescriptor = Object.getOwnPropertyDescriptor(RunInRootFrame.DetermineComponentFrameRoot, 'name'); // Before ES6, the `name` property was not configurable.\n\n  if (namePropDescriptor && namePropDescriptor.configurable) {\n    // V8 utilizes a function's `name` property when generating a stack trace.\n    Object.defineProperty(RunInRootFrame.DetermineComponentFrameRoot, // Configurable properties can be updated even if its writable descriptor\n    // is set to `false`.\n    // $FlowFixMe[cannot-write]\n    'name', {\n      value: 'DetermineComponentFrameRoot'\n    });\n  }\n\n  try {\n    var _RunInRootFrame$Deter = RunInRootFrame.DetermineComponentFrameRoot(),\n        sampleStack = _RunInRootFrame$Deter[0],\n        controlStack = _RunInRootFrame$Deter[1];\n\n    if (sampleStack && controlStack) {\n      // This extracts the first frame from the sample that isn't also in the control.\n      // Skipping one frame that we assume is the frame that calls the two.\n      var sampleLines = sampleStack.split('\\n');\n      var controlLines = controlStack.split('\\n');\n      var s = 0;\n      var c = 0;\n\n      while (s < sampleLines.length && !sampleLines[s].includes('DetermineComponentFrameRoot')) {\n        s++;\n      }\n\n      while (c < controlLines.length && !controlLines[c].includes('DetermineComponentFrameRoot')) {\n        c++;\n      } // We couldn't find our intentionally injected common root frame, attempt\n      // to find another common root frame by search from the bottom of the\n      // control stack...\n\n\n      if (s === sampleLines.length || c === controlLines.length) {\n        s = sampleLines.length - 1;\n        c = controlLines.length - 1;\n\n        while (s >= 1 && c >= 0 && sampleLines[s] !== controlLines[c]) {\n          // We expect at least one stack frame to be shared.\n          // Typically this will be the root most one. However, stack frames may be\n          // cut off due to maximum stack limits. In this case, one maybe cut off\n          // earlier than the other. We assume that the sample is longer or the same\n          // and there for cut off earlier. So we should find the root most frame in\n          // the sample somewhere in the control.\n          c--;\n        }\n      }\n\n      for (; s >= 1 && c >= 0; s--, c--) {\n        // Next we find the first one that isn't the same which should be the\n        // frame that called our sample function and the control.\n        if (sampleLines[s] !== controlLines[c]) {\n          // In V8, the first line is describing the message but other VMs don't.\n          // If we're about to return the first line, and the control is also on the same\n          // line, that's a pretty good indicator that our sample threw at same line as\n          // the control. I.e. before we entered the sample frame. So we ignore this result.\n          // This can happen if you passed a class to function component, or non-function.\n          if (s !== 1 || c !== 1) {\n            do {\n              s--;\n              c--; // We may still have similar intermediate frames from the construct call.\n              // The next one that isn't the same should be our match though.\n\n              if (c < 0 || sampleLines[s] !== controlLines[c]) {\n                // V8 adds a \"new\" prefix for native classes. Let's remove it to make it prettier.\n                var _frame = '\\n' + sampleLines[s].replace(' at new ', ' at '); // If our component frame is labeled \"<anonymous>\"\n                // but we have a user-provided \"displayName\"\n                // splice it in to make the stack more readable.\n\n\n                if (fn.displayName && _frame.includes('<anonymous>')) {\n                  _frame = _frame.replace('<anonymous>', fn.displayName);\n                }\n\n                if (true) {\n                  if (typeof fn === 'function') {\n                    componentFrameCache.set(fn, _frame);\n                  }\n                } // Return the line we found.\n\n\n                return _frame;\n              }\n            } while (s >= 1 && c >= 0);\n          }\n\n          break;\n        }\n      }\n    }\n  } finally {\n    reentry = false;\n\n    {\n      ReactCurrentDispatcher.current = previousDispatcher;\n      reenableLogs();\n    }\n\n    Error.prepareStackTrace = previousPrepareStackTrace;\n  } // Fallback to just using the name if we couldn't make it throw.\n\n\n  var name = fn ? fn.displayName || fn.name : '';\n  var syntheticFrame = name ? describeBuiltInComponentFrame(name) : '';\n\n  {\n    if (typeof fn === 'function') {\n      componentFrameCache.set(fn, syntheticFrame);\n    }\n  }\n\n  return syntheticFrame;\n}\nfunction describeFunctionComponentFrame(fn, ownerFn) {\n  {\n    return describeNativeComponentFrame(fn, false);\n  }\n}\n\nfunction shouldConstruct(Component) {\n  var prototype = Component.prototype;\n  return !!(prototype && prototype.isReactComponent);\n}\n\nfunction describeUnknownElementTypeFrameInDEV(type, ownerFn) {\n\n  if (type == null) {\n    return '';\n  }\n\n  if (typeof type === 'function') {\n    {\n      return describeNativeComponentFrame(type, shouldConstruct(type));\n    }\n  }\n\n  if (typeof type === 'string') {\n    return describeBuiltInComponentFrame(type);\n  }\n\n  switch (type) {\n    case REACT_SUSPENSE_TYPE:\n      return describeBuiltInComponentFrame('Suspense');\n\n    case REACT_SUSPENSE_LIST_TYPE:\n      return describeBuiltInComponentFrame('SuspenseList');\n  }\n\n  if (typeof type === 'object') {\n    switch (type.$$typeof) {\n      case REACT_FORWARD_REF_TYPE:\n        return describeFunctionComponentFrame(type.render);\n\n      case REACT_MEMO_TYPE:\n        // Memo may contain any component type so we recursively resolve it.\n        return describeUnknownElementTypeFrameInDEV(type.type, ownerFn);\n\n      case REACT_LAZY_TYPE:\n        {\n          var lazyComponent = type;\n          var payload = lazyComponent._payload;\n          var init = lazyComponent._init;\n\n          try {\n            // Lazy may contain any component type so we recursively resolve it.\n            return describeUnknownElementTypeFrameInDEV(init(payload), ownerFn);\n          } catch (x) {}\n        }\n    }\n  }\n\n  return '';\n}\n\nvar ReactCurrentOwner = ReactSharedInternals.ReactCurrentOwner;\nvar ReactDebugCurrentFrame = ReactSharedInternals.ReactDebugCurrentFrame;\nvar REACT_CLIENT_REFERENCE = Symbol.for('react.client.reference');\nvar specialPropKeyWarningShown;\nvar specialPropRefWarningShown;\nvar didWarnAboutStringRefs;\n\n{\n  didWarnAboutStringRefs = {};\n}\n\nfunction hasValidRef(config) {\n  {\n    if (hasOwnProperty.call(config, 'ref')) {\n      var getter = Object.getOwnPropertyDescriptor(config, 'ref').get;\n\n      if (getter && getter.isReactWarning) {\n        return false;\n      }\n    }\n  }\n\n  return config.ref !== undefined;\n}\n\nfunction hasValidKey(config) {\n  {\n    if (hasOwnProperty.call(config, 'key')) {\n      var getter = Object.getOwnPropertyDescriptor(config, 'key').get;\n\n      if (getter && getter.isReactWarning) {\n        return false;\n      }\n    }\n  }\n\n  return config.key !== undefined;\n}\n\nfunction warnIfStringRefCannotBeAutoConverted(config, self) {\n  {\n    if (typeof config.ref === 'string' && ReactCurrentOwner.current && self && ReactCurrentOwner.current.stateNode !== self) {\n      var componentName = getComponentNameFromType(ReactCurrentOwner.current.type);\n\n      if (!didWarnAboutStringRefs[componentName]) {\n        error('Component \"%s\" contains the string ref \"%s\". ' + 'Support for string refs will be removed in a future major release. ' + 'This case cannot be automatically converted to an arrow function. ' + 'We ask you to manually fix this case by using useRef() or createRef() instead. ' + 'Learn more about using refs safely here: ' + 'https://reactjs.org/link/strict-mode-string-ref', getComponentNameFromType(ReactCurrentOwner.current.type), config.ref);\n\n        didWarnAboutStringRefs[componentName] = true;\n      }\n    }\n  }\n}\n\nfunction defineKeyPropWarningGetter(props, displayName) {\n  {\n    var warnAboutAccessingKey = function () {\n      if (!specialPropKeyWarningShown) {\n        specialPropKeyWarningShown = true;\n\n        error('%s: `key` is not a prop. Trying to access it will result ' + 'in `undefined` being returned. If you need to access the same ' + 'value within the child component, you should pass it as a different ' + 'prop. (https://reactjs.org/link/special-props)', displayName);\n      }\n    };\n\n    warnAboutAccessingKey.isReactWarning = true;\n    Object.defineProperty(props, 'key', {\n      get: warnAboutAccessingKey,\n      configurable: true\n    });\n  }\n}\n\nfunction defineRefPropWarningGetter(props, displayName) {\n  {\n    {\n      var warnAboutAccessingRef = function () {\n        if (!specialPropRefWarningShown) {\n          specialPropRefWarningShown = true;\n\n          error('%s: `ref` is not a prop. Trying to access it will result ' + 'in `undefined` being returned. If you need to access the same ' + 'value within the child component, you should pass it as a different ' + 'prop. (https://reactjs.org/link/special-props)', displayName);\n        }\n      };\n\n      warnAboutAccessingRef.isReactWarning = true;\n      Object.defineProperty(props, 'ref', {\n        get: warnAboutAccessingRef,\n        configurable: true\n      });\n    }\n  }\n}\n/**\n * Factory method to create a new React element. This no longer adheres to\n * the class pattern, so do not use new to call it. Also, instanceof check\n * will not work. Instead test $$typeof field against Symbol.for('react.element') to check\n * if something is a React Element.\n *\n * @param {*} type\n * @param {*} props\n * @param {*} key\n * @param {string|object} ref\n * @param {*} owner\n * @param {*} self A *temporary* helper to detect places where `this` is\n * different from the `owner` when React.createElement is called, so that we\n * can warn. We want to get rid of owner and replace string `ref`s with arrow\n * functions, and as long as `this` and owner are the same, there will be no\n * change in behavior.\n * @param {*} source An annotation object (added by a transpiler or otherwise)\n * indicating filename, line number, and/or other information.\n * @internal\n */\n\n\nfunction ReactElement(type, key, _ref, self, source, owner, props) {\n  var ref;\n\n  {\n    ref = _ref;\n  }\n\n  var element;\n\n  {\n    // In prod, `ref` is a regular property. It will be removed in a\n    // future release.\n    element = {\n      // This tag allows us to uniquely identify this as a React Element\n      $$typeof: REACT_ELEMENT_TYPE,\n      // Built-in properties that belong on the element\n      type: type,\n      key: key,\n      ref: ref,\n      props: props,\n      // Record the component responsible for creating this element.\n      _owner: owner\n    };\n  }\n\n  {\n    // The validation flag is currently mutative. We put it on\n    // an external backing store so that we can freeze the whole object.\n    // This can be replaced with a WeakMap once they are implemented in\n    // commonly used development environments.\n    element._store = {}; // To make comparing ReactElements easier for testing purposes, we make\n    // the validation flag non-enumerable (where possible, which should\n    // include every environment we run tests in), so the test framework\n    // ignores it.\n\n    Object.defineProperty(element._store, 'validated', {\n      configurable: false,\n      enumerable: false,\n      writable: true,\n      value: false\n    }); // debugInfo contains Server Component debug information.\n\n    Object.defineProperty(element, '_debugInfo', {\n      configurable: false,\n      enumerable: false,\n      writable: true,\n      value: null\n    });\n\n    if (Object.freeze) {\n      Object.freeze(element.props);\n      Object.freeze(element);\n    }\n  }\n\n  return element;\n}\nvar didWarnAboutKeySpread = {};\n/**\n * https://github.com/reactjs/rfcs/pull/107\n * @param {*} type\n * @param {object} props\n * @param {string} key\n */\n\nfunction jsxDEV$1(type, config, maybeKey, isStaticChildren, source, self) {\n  {\n    if (!isValidElementType(type)) {\n      // This is an invalid element type.\n      //\n      // We warn in this case but don't throw. We expect the element creation to\n      // succeed and there will likely be errors in render.\n      var info = '';\n\n      if (type === undefined || typeof type === 'object' && type !== null && Object.keys(type).length === 0) {\n        info += ' You likely forgot to export your component from the file ' + \"it's defined in, or you might have mixed up default and named imports.\";\n      }\n\n      var typeString;\n\n      if (type === null) {\n        typeString = 'null';\n      } else if (isArray(type)) {\n        typeString = 'array';\n      } else if (type !== undefined && type.$$typeof === REACT_ELEMENT_TYPE) {\n        typeString = \"<\" + (getComponentNameFromType(type.type) || 'Unknown') + \" />\";\n        info = ' Did you accidentally export a JSX literal instead of a component?';\n      } else {\n        typeString = typeof type;\n      }\n\n      error('React.jsx: type is invalid -- expected a string (for ' + 'built-in components) or a class/function (for composite ' + 'components) but got: %s.%s', typeString, info);\n    } else {\n      // This is a valid element type.\n      // Skip key warning if the type isn't valid since our key validation logic\n      // doesn't expect a non-string/function type and can throw confusing\n      // errors. We don't want exception behavior to differ between dev and\n      // prod. (Rendering will throw with a helpful message and as soon as the\n      // type is fixed, the key warnings will appear.)\n      var children = config.children;\n\n      if (children !== undefined) {\n        if (isStaticChildren) {\n          if (isArray(children)) {\n            for (var i = 0; i < children.length; i++) {\n              validateChildKeys(children[i], type);\n            }\n\n            if (Object.freeze) {\n              Object.freeze(children);\n            }\n          } else {\n            error('React.jsx: Static children should always be an array. ' + 'You are likely explicitly calling React.jsxs or React.jsxDEV. ' + 'Use the Babel transform instead.');\n          }\n        } else {\n          validateChildKeys(children, type);\n        }\n      }\n    } // Warn about key spread regardless of whether the type is valid.\n\n\n    if (hasOwnProperty.call(config, 'key')) {\n      var componentName = getComponentNameFromType(type);\n      var keys = Object.keys(config).filter(function (k) {\n        return k !== 'key';\n      });\n      var beforeExample = keys.length > 0 ? '{key: someKey, ' + keys.join(': ..., ') + ': ...}' : '{key: someKey}';\n\n      if (!didWarnAboutKeySpread[componentName + beforeExample]) {\n        var afterExample = keys.length > 0 ? '{' + keys.join(': ..., ') + ': ...}' : '{}';\n\n        error('A props object containing a \"key\" prop is being spread into JSX:\\n' + '  let props = %s;\\n' + '  <%s {...props} />\\n' + 'React keys must be passed directly to JSX without using spread:\\n' + '  let props = %s;\\n' + '  <%s key={someKey} {...props} />', beforeExample, componentName, afterExample, componentName);\n\n        didWarnAboutKeySpread[componentName + beforeExample] = true;\n      }\n    }\n\n    var propName; // Reserved names are extracted\n\n    var props = {};\n    var key = null;\n    var ref = null; // Currently, key can be spread in as a prop. This causes a potential\n    // issue if key is also explicitly declared (ie. <div {...props} key=\"Hi\" />\n    // or <div key=\"Hi\" {...props} /> ). We want to deprecate key spread,\n    // but as an intermediary step, we will use jsxDEV for everything except\n    // <div {...props} key=\"Hi\" />, because we aren't currently able to tell if\n    // key is explicitly declared to be undefined or not.\n\n    if (maybeKey !== undefined) {\n      {\n        checkKeyStringCoercion(maybeKey);\n      }\n\n      key = '' + maybeKey;\n    }\n\n    if (hasValidKey(config)) {\n      {\n        checkKeyStringCoercion(config.key);\n      }\n\n      key = '' + config.key;\n    }\n\n    if (hasValidRef(config)) {\n      {\n        ref = config.ref;\n      }\n\n      warnIfStringRefCannotBeAutoConverted(config, self);\n    } // Remaining properties are added to a new props object\n\n\n    for (propName in config) {\n      if (hasOwnProperty.call(config, propName) && // Skip over reserved prop names\n      propName !== 'key' && (propName !== 'ref')) {\n        props[propName] = config[propName];\n      }\n    } // Resolve default props\n\n\n    if (type && type.defaultProps) {\n      var defaultProps = type.defaultProps;\n\n      for (propName in defaultProps) {\n        if (props[propName] === undefined) {\n          props[propName] = defaultProps[propName];\n        }\n      }\n    }\n\n    if (key || ref) {\n      var displayName = typeof type === 'function' ? type.displayName || type.name || 'Unknown' : type;\n\n      if (key) {\n        defineKeyPropWarningGetter(props, displayName);\n      }\n\n      if (ref) {\n        defineRefPropWarningGetter(props, displayName);\n      }\n    }\n\n    var element = ReactElement(type, key, ref, self, source, ReactCurrentOwner.current, props);\n\n    if (type === REACT_FRAGMENT_TYPE) {\n      validateFragmentProps(element);\n    }\n\n    return element;\n  }\n}\n\nfunction getDeclarationErrorAddendum() {\n  {\n    if (ReactCurrentOwner.current) {\n      var name = getComponentNameFromType(ReactCurrentOwner.current.type);\n\n      if (name) {\n        return '\\n\\nCheck the render method of `' + name + '`.';\n      }\n    }\n\n    return '';\n  }\n}\n/**\n * Ensure that every element either is passed in a static location, in an\n * array with an explicit keys property defined, or in an object literal\n * with valid key property.\n *\n * @internal\n * @param {ReactNode} node Statically passed child of any type.\n * @param {*} parentType node's parent's type.\n */\n\n\nfunction validateChildKeys(node, parentType) {\n  {\n    if (typeof node !== 'object' || !node) {\n      return;\n    }\n\n    if (node.$$typeof === REACT_CLIENT_REFERENCE) ; else if (isArray(node)) {\n      for (var i = 0; i < node.length; i++) {\n        var child = node[i];\n\n        if (isValidElement(child)) {\n          validateExplicitKey(child, parentType);\n        }\n      }\n    } else if (isValidElement(node)) {\n      // This element was passed in a valid location.\n      if (node._store) {\n        node._store.validated = true;\n      }\n    } else {\n      var iteratorFn = getIteratorFn(node);\n\n      if (typeof iteratorFn === 'function') {\n        // Entry iterators used to provide implicit keys,\n        // but now we print a separate warning for them later.\n        if (iteratorFn !== node.entries) {\n          var iterator = iteratorFn.call(node);\n          var step;\n\n          while (!(step = iterator.next()).done) {\n            if (isValidElement(step.value)) {\n              validateExplicitKey(step.value, parentType);\n            }\n          }\n        }\n      }\n    }\n  }\n}\n/**\n * Verifies the object is a ReactElement.\n * See https://reactjs.org/docs/react-api.html#isvalidelement\n * @param {?object} object\n * @return {boolean} True if `object` is a ReactElement.\n * @final\n */\n\n\nfunction isValidElement(object) {\n  return typeof object === 'object' && object !== null && object.$$typeof === REACT_ELEMENT_TYPE;\n}\nvar ownerHasKeyUseWarning = {};\n/**\n * Warn if the element doesn't have an explicit key assigned to it.\n * This element is in an array. The array could grow and shrink or be\n * reordered. All children that haven't already been validated are required to\n * have a \"key\" property assigned to it. Error statuses are cached so a warning\n * will only be shown once.\n *\n * @internal\n * @param {ReactElement} element Element that requires a key.\n * @param {*} parentType element's parent's type.\n */\n\nfunction validateExplicitKey(element, parentType) {\n  {\n    if (!element._store || element._store.validated || element.key != null) {\n      return;\n    }\n\n    element._store.validated = true;\n    var currentComponentErrorInfo = getCurrentComponentErrorInfo(parentType);\n\n    if (ownerHasKeyUseWarning[currentComponentErrorInfo]) {\n      return;\n    }\n\n    ownerHasKeyUseWarning[currentComponentErrorInfo] = true; // Usually the current owner is the offender, but if it accepts children as a\n    // property, it may be the creator of the child that's responsible for\n    // assigning it a key.\n\n    var childOwner = '';\n\n    if (element && element._owner && element._owner !== ReactCurrentOwner.current) {\n      // Give the component that originally created this child.\n      childOwner = \" It was passed a child from \" + getComponentNameFromType(element._owner.type) + \".\";\n    }\n\n    setCurrentlyValidatingElement(element);\n\n    error('Each child in a list should have a unique \"key\" prop.' + '%s%s See https://reactjs.org/link/warning-keys for more information.', currentComponentErrorInfo, childOwner);\n\n    setCurrentlyValidatingElement(null);\n  }\n}\n\nfunction setCurrentlyValidatingElement(element) {\n  {\n    if (element) {\n      var owner = element._owner;\n      var stack = describeUnknownElementTypeFrameInDEV(element.type, owner ? owner.type : null);\n      ReactDebugCurrentFrame.setExtraStackFrame(stack);\n    } else {\n      ReactDebugCurrentFrame.setExtraStackFrame(null);\n    }\n  }\n}\n\nfunction getCurrentComponentErrorInfo(parentType) {\n  {\n    var info = getDeclarationErrorAddendum();\n\n    if (!info) {\n      var parentName = getComponentNameFromType(parentType);\n\n      if (parentName) {\n        info = \"\\n\\nCheck the top-level render call using <\" + parentName + \">.\";\n      }\n    }\n\n    return info;\n  }\n}\n/**\n * Given a fragment, validate that it can only be provided with fragment props\n * @param {ReactElement} fragment\n */\n\n\nfunction validateFragmentProps(fragment) {\n  // TODO: Move this to render phase instead of at element creation.\n  {\n    var keys = Object.keys(fragment.props);\n\n    for (var i = 0; i < keys.length; i++) {\n      var key = keys[i];\n\n      if (key !== 'children' && key !== 'key') {\n        setCurrentlyValidatingElement(fragment);\n\n        error('Invalid prop `%s` supplied to `React.Fragment`. ' + 'React.Fragment can only have `key` and `children` props.', key);\n\n        setCurrentlyValidatingElement(null);\n        break;\n      }\n    }\n\n    if (fragment.ref !== null) {\n      setCurrentlyValidatingElement(fragment);\n\n      error('Invalid attribute `ref` supplied to `React.Fragment`.');\n\n      setCurrentlyValidatingElement(null);\n    }\n  }\n}\n\nvar jsxDEV = jsxDEV$1 ;\n\nexports.Fragment = REACT_FRAGMENT_TYPE;\nexports.jsxDEV = jsxDEV;\n  })();\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/next/dist/compiled/react/cjs/react-jsx-dev-runtime.development.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/next/dist/compiled/react/jsx-dev-runtime.js":
/*!******************************************************************!*\
  !*** ./node_modules/next/dist/compiled/react/jsx-dev-runtime.js ***!
  \******************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\n\nif (false) {} else {\n  module.exports = __webpack_require__(/*! ./cjs/react-jsx-dev-runtime.development.js */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/cjs/react-jsx-dev-runtime.development.js\");\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvY29tcGlsZWQvcmVhY3QvanN4LWRldi1ydW50aW1lLmpzIiwibWFwcGluZ3MiOiJBQUFhOztBQUViLElBQUksS0FBcUMsRUFBRSxFQUUxQyxDQUFDO0FBQ0YsRUFBRSw4TEFBc0U7QUFDeEUiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9jb21waWxlZC9yZWFjdC9qc3gtZGV2LXJ1bnRpbWUuanM/ZDU4OCJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5cbmlmIChwcm9jZXNzLmVudi5OT0RFX0VOViA9PT0gJ3Byb2R1Y3Rpb24nKSB7XG4gIG1vZHVsZS5leHBvcnRzID0gcmVxdWlyZSgnLi9janMvcmVhY3QtanN4LWRldi1ydW50aW1lLnByb2R1Y3Rpb24ubWluLmpzJyk7XG59IGVsc2Uge1xuICBtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoJy4vY2pzL3JlYWN0LWpzeC1kZXYtcnVudGltZS5kZXZlbG9wbWVudC5qcycpO1xufVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/next/dist/compiled/react/jsx-dev-runtime.js\n"));

/***/ })

},
/******/ function(__webpack_require__) { // webpackRuntimeModules
/******/ var __webpack_exec__ = function(moduleId) { return __webpack_require__(__webpack_require__.s = moduleId); }
/******/ __webpack_require__.O(0, ["main-app"], function() { return __webpack_exec__("(app-pages-browser)/./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?modules=%7B%22request%22%3A%22%2FUsers%2Ftakumatamaki%2Fcode%2FCatask%2Fapp%2Fproviders%2FAuthProvider.tsx%22%2C%22ids%22%3A%5B%22AuthProvider%22%5D%7D&modules=%7B%22request%22%3A%22%2FUsers%2Ftakumatamaki%2Fcode%2FCatask%2Fapp%2Fproviders%2FCatStatusProvider.tsx%22%2C%22ids%22%3A%5B%22CatStatusProvider%22%5D%7D&modules=%7B%22request%22%3A%22%2FUsers%2Ftakumatamaki%2Fcode%2FCatask%2Fapp%2Fproviders%2FItemProvider.tsx%22%2C%22ids%22%3A%5B%22ItemProvider%22%5D%7D&modules=%7B%22request%22%3A%22%2FUsers%2Ftakumatamaki%2Fcode%2FCatask%2Fnode_modules%2Fnext%2Ffont%2Fgoogle%2Ftarget.css%3F%7B%5C%22path%5C%22%3A%5C%22app%2Flayout.tsx%5C%22%2C%5C%22import%5C%22%3A%5C%22Inter%5C%22%2C%5C%22arguments%5C%22%3A%5B%7B%5C%22subsets%5C%22%3A%5B%5C%22latin%5C%22%5D%7D%5D%2C%5C%22variableName%5C%22%3A%5C%22inter%5C%22%7D%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22%2FUsers%2Ftakumatamaki%2Fcode%2FCatask%2Fapp%2Fglobals.css%22%2C%22ids%22%3A%5B%5D%7D&server=false!"); });
/******/ var __webpack_exports__ = __webpack_require__.O();
/******/ _N_E = __webpack_exports__;
/******/ }
]);